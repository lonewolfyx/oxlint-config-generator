[
    {
        "source": "eslint",
        "plugin": "",
        "name": "for-direction",
        "cli": "oxlint --deny for-direction",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/for-direction.html",
            "description": "Disallow for loop update causing the counter to move in the wrong direction."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-async-promise-executor",
        "cli": "oxlint --deny no-async-promise-executor",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-async-promise-executor.html",
            "description": "Disallow using an async function as a Promise executor."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-caller",
        "cli": "oxlint --deny no-caller",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-caller.html",
            "description": "Disallow the use of arguments.caller or arguments.callee."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-compare-neg-zero",
        "cli": "oxlint --deny no-compare-neg-zero",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-compare-neg-zero.html",
            "description": "Disallow comparing against -0"
        },
        "fixable": "üõ†Ô∏èüí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-cond-assign",
        "cli": "oxlint --deny no-cond-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-cond-assign.html",
            "description": "Disallow assignment operators in conditional expressions"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-class-assign",
        "cli": "oxlint --deny no-class-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-class-assign.html",
            "description": "Disallow reassigning class variables."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-const-assign",
        "cli": "oxlint --deny no-const-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-const-assign.html",
            "description": "Disallow reassigning const variables."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-constant-binary-expression",
        "cli": "oxlint --deny no-constant-binary-expression",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constant-binary-expression.html",
            "description": "Disallow expressions where the operation doesn't affect the value"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-constant-condition",
        "cli": "oxlint --deny no-constant-condition",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constant-condition.html",
            "description": "Disallow constant expressions in conditions"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-control-regex",
        "cli": "oxlint --deny no-control-regex",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-control-regex.html",
            "description": "Disallows control characters and some escape sequences that match control characters in regular expressions."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-debugger",
        "cli": "oxlint --deny no-debugger",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-debugger.html",
            "description": "Checks for usage of the debugger statement"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-delete-var",
        "cli": "oxlint --deny no-delete-var",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-delete-var.html",
            "description": "The purpose of the delete operator is to remove a property from an object."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-dupe-class-members",
        "cli": "oxlint --deny no-dupe-class-members",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-dupe-class-members.html",
            "description": "Disallow duplicate class members"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-dupe-keys",
        "cli": "oxlint --deny no-dupe-keys",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-dupe-keys.html",
            "description": "Disallow duplicate keys in object literals"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-duplicate-case",
        "cli": "oxlint --deny no-duplicate-case",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-duplicate-case.html",
            "description": "Disallow duplicate case labels"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-dupe-else-if",
        "cli": "oxlint --deny no-dupe-else-if",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-dupe-else-if.html",
            "description": "Disallow duplicate conditions in if-else-if chains"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-empty-character-class",
        "cli": "oxlint --deny no-empty-character-class",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-character-class.html",
            "description": "Disallow empty character classes in regular expressions"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-empty-pattern",
        "cli": "oxlint --deny no-empty-pattern",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-pattern.html",
            "description": "Disallow empty destructuring patterns"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-empty-static-block",
        "cli": "oxlint --deny no-empty-static-block",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-static-block.html",
            "description": "Disallows the usages of empty static blocks"
        },
        "fixable": "üí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-eval",
        "cli": "oxlint --deny no-eval",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-eval.html",
            "description": "Disallows referencing the eval function. This rule is aimed at preventing potentially dangerous, unnecessary, and slow code by disallowing the use of the eval() function."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-func-assign",
        "cli": "oxlint --deny no-func-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-func-assign.html",
            "description": "Disallow reassigning function declarations"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-extra-boolean-cast",
        "cli": "oxlint --deny no-extra-boolean-cast",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-boolean-cast.html",
            "description": "This rule disallows unnecessary boolean casts."
        },
        "fixable": "üõ†Ô∏èüí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-ex-assign",
        "cli": "oxlint --deny no-ex-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-ex-assign.html",
            "description": "Disallow reassigning exceptions in catch clauses"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-irregular-whitespace",
        "cli": "oxlint --deny no-irregular-whitespace",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-irregular-whitespace.html",
            "description": "Disallows the use of irregular whitespaces in the code."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-global-assign",
        "cli": "oxlint --deny no-global-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-global-assign.html",
            "description": "Disallow modifications to read-only global variables."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-invalid-regexp",
        "cli": "oxlint --deny no-invalid-regexp",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-invalid-regexp.html",
            "description": "Disallow invalid regular expression strings in RegExp constructors."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-import-assign",
        "cli": "oxlint --deny no-import-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-import-assign.html",
            "description": "Disallow assigning to imported bindings"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-loss-of-precision",
        "cli": "oxlint --deny no-loss-of-precision",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-loss-of-precision.html",
            "description": "Disallow precision loss of number literal"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-new-native-nonconstructor",
        "cli": "oxlint --deny no-new-native-nonconstructor",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new-native-nonconstructor.html",
            "description": "Disallow new operators with global non-constructor functions (Symbol, BigInt)"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-nonoctal-decimal-escape",
        "cli": "oxlint --deny no-nonoctal-decimal-escape",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-nonoctal-decimal-escape.html",
            "description": "This rule disallows \\8 and \\9 escape sequences in string literals"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-obj-calls",
        "cli": "oxlint --deny no-obj-calls",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-obj-calls.html",
            "description": "Disallow calling some global objects as functions"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-self-assign",
        "cli": "oxlint --deny no-self-assign",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-self-assign.html",
            "description": "Disallow assignments where both sides are exactly the same."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-shadow-restricted-names",
        "cli": "oxlint --deny no-shadow-restricted-names",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-shadow-restricted-names.html",
            "description": "Disallows the redefining of global variables such as undefined, NaN, Infinity, eval and arguments."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-setter-return",
        "cli": "oxlint --deny no-setter-return",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-setter-return.html",
            "description": "Setters cannot return values."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-sparse-arrays",
        "cli": "oxlint --deny no-sparse-arrays",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-sparse-arrays.html",
            "description": "Disallow sparse arrays."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-this-before-super",
        "cli": "oxlint --deny no-this-before-super",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-this-before-super.html",
            "description": "Requires calling super() before using this or super."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unsafe-finally",
        "cli": "oxlint --deny no-unsafe-finally",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-finally.html",
            "description": "Disallow control flow statements in finally blocks"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unsafe-negation",
        "cli": "oxlint --deny no-unsafe-negation",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-negation.html",
            "description": "Disallows negating the left operand of relational operators to prevent logical errors caused by misunderstanding operator precedence or accidental use of negation."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unused-labels",
        "cli": "oxlint --deny no-unused-labels",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-labels.html",
            "description": "Disallow unused labels"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unsafe-optional-chaining",
        "cli": "oxlint --deny no-unsafe-optional-chaining",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unsafe-optional-chaining.html",
            "description": "Disallow use of optional chaining in contexts where the undefined value is not allowed"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unused-private-class-members",
        "cli": "oxlint --deny no-unused-private-class-members",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-private-class-members.html",
            "description": "Disallow unused private class members"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-useless-catch",
        "cli": "oxlint --deny no-useless-catch",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-catch.html",
            "description": "Disallow unnecessary catch clauses"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-useless-backreference",
        "cli": "oxlint --deny no-useless-backreference",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-backreference.html",
            "description": "Disallows backreferences in regular expressions that will always be ignored because the capture group they refer to has not matched and cannot match at the time the backreference is evaluated."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-useless-escape",
        "cli": "oxlint --deny no-useless-escape",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-escape.html",
            "description": "Disallow unnecessary escape characters"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-useless-rename",
        "cli": "oxlint --deny no-useless-rename",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-rename.html",
            "description": "Disallow renaming import, export, and destructured assignments to the same name."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-with",
        "cli": "oxlint --deny no-with",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-with.html",
            "description": "Disallow with statements"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unused-vars",
        "cli": "oxlint --deny no-unused-vars",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-vars.html",
            "description": "Disallows variable declarations, imports, or type declarations that are not used in code."
        },
        "fixable": "‚ö†Ô∏èüí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "require-yield",
        "cli": "oxlint --deny require-yield",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/require-yield.html",
            "description": "This rule generates warnings for generator functions that do not have the yield keyword."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/default",
        "cli": "oxlint --deny import/default --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/default.html",
            "description": "If a default import is requested, this rule will report if there is no default export in the imported module."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "use-isnan",
        "cli": "oxlint --deny use-isnan",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/use-isnan.html",
            "description": "Disallows checking against NaN without using isNaN() call."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/namespace",
        "cli": "oxlint --deny import/namespace --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/namespace.html",
            "description": "Enforces names exist at the time they are dereferenced, when imported as a full namespace (i.e. import * as foo from './foo'; foo.bar(); will report if bar is not exported by ./foo.). Will report at the import declaration if there are no exported names found. Also, will report for computed references (i.e. foo[\"bar\"]()). Reports on assignment to a member of an imported namespace."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "valid-typeof",
        "cli": "oxlint --deny valid-typeof",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/valid-typeof.html",
            "description": "Enforce comparing typeof expressions against valid strings."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-conditional-expect",
        "cli": "oxlint --deny jest/no-conditional-expect --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-conditional-expect.html",
            "description": "This rule prevents the use of expect in conditional blocks, such as ifs & catch(s). This includes using expect in callbacks to functions named catch, which are assumed to be promises."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-export",
        "cli": "oxlint --deny jest/no-export --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-export.html",
            "description": "Prevents using exports if a file has one or more tests in it."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-disabled-tests",
        "cli": "oxlint --deny jest/no-disabled-tests --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-disabled-tests.html",
            "description": "This rule raises a warning about disabled tests."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/expect-expect",
        "cli": "oxlint --deny jest/expect-expect --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/expect-expect.html",
            "description": "This rule triggers when there is no call made to expect in a test, ensure that there is at least one expect call made in a test."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-standalone-expect",
        "cli": "oxlint --deny jest/no-standalone-expect --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-standalone-expect.html",
            "description": "Prevents expect statements outside of a test or it block. An expect within a helper function (but outside of a test or it block) will not trigger this rule."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/require-to-throw-message",
        "cli": "oxlint --deny jest/require-to-throw-message --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/require-to-throw-message.html",
            "description": "This rule triggers a warning if toThrow() or toThrowError() is used without an error message."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/valid-title",
        "cli": "oxlint --deny jest/valid-title --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/valid-title.html",
            "description": "Checks that the titles of Jest blocks are valid."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/valid-describe-callback",
        "cli": "oxlint --deny jest/valid-describe-callback --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/valid-describe-callback.html",
            "description": "This rule validates that the second parameter of a describe() function is a callback function. This callback function:"
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/valid-expect",
        "cli": "oxlint --deny jest/valid-expect --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/valid-expect.html",
            "description": "Checks that expect() is called correctly."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/check-tag-names",
        "cli": "oxlint --deny jsdoc/check-tag-names --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-tag-names.html",
            "description": "Reports invalid block tag names. Additionally checks for tag names that are redundant when using a type checker such as TypeScript."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/check-property-names",
        "cli": "oxlint --deny jsdoc/check-property-names --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-property-names.html",
            "description": "Ensures that property names in JSDoc are not duplicated on the same block and that nested properties have defined roots."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-property",
        "cli": "oxlint --deny jsdoc/require-property --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property.html",
            "description": "Requires that all @typedef and @namespace tags have @property tags when their type is a plain object, Object, or PlainObject."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/implements-on-classes",
        "cli": "oxlint --deny jsdoc/implements-on-classes --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/implements-on-classes.html",
            "description": "Reports an issue with any non-constructor function using @implements."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-property-description",
        "cli": "oxlint --deny jsdoc/require-property-description --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property-description.html",
            "description": "Requires that all @property tags have descriptions."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-property-name",
        "cli": "oxlint --deny jsdoc/require-property-name --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property-name.html",
            "description": "Requires that all @property tags have names."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-property-type",
        "cli": "oxlint --deny jsdoc/require-property-type --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-property-type.html",
            "description": "Requires that each @property tag has a type value (within curly brackets)."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/alt-text",
        "cli": "oxlint --deny jsx-a11y/alt-text --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/alt-text.html",
            "description": "Enforce that all elements that require alternative text have meaningful information to relay back to the end user."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-yields",
        "cli": "oxlint --deny jsdoc/require-yields --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-yields.html",
            "description": "Requires that yields are documented. Will also report if multiple @yields tags are present."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/no-defaults",
        "cli": "oxlint --deny jsdoc/no-defaults --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/no-defaults.html",
            "description": "This rule reports defaults being used on the relevant portion of @param or @default. It also optionally reports the presence of the square-bracketed optional arguments at all."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/aria-activedescendant-has-tabindex",
        "cli": "oxlint --deny jsx-a11y/aria-activedescendant-has-tabindex --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-activedescendant-has-tabindex.html",
            "description": "Enforce elements with aria-activedescendant are tabbable."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/anchor-is-valid",
        "cli": "oxlint --deny jsx-a11y/anchor-is-valid --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/anchor-is-valid.html",
            "description": "The HTML <a> element, with a valid href attribute, is formally defined as representing a hyperlink. That is, a link between one HTML document and another, or between one location inside an HTML document and another location inside the same document."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/aria-props",
        "cli": "oxlint --deny jsx-a11y/aria-props --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-props.html",
            "description": "Enforces that elements do not use invalid ARIA attributes."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/aria-unsupported-elements",
        "cli": "oxlint --deny jsx-a11y/aria-unsupported-elements --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-unsupported-elements.html",
            "description": "Certain reserved DOM elements do not support ARIA roles, states and properties. This is often because they are not visible, for example meta, html, script, style. This rule enforces that these DOM elements do not contain the role and/or aria-* props."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-focused-tests",
        "cli": "oxlint --deny jest/no-focused-tests --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-focused-tests.html",
            "description": "This rule reminds you to remove .only from your tests by raising a warning whenever you are using the exclusivity feature."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/autocomplete-valid",
        "cli": "oxlint --deny jsx-a11y/autocomplete-valid --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/autocomplete-valid.html",
            "description": "Enforces that an element's autocomplete attribute must be a valid value."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/click-events-have-key-events",
        "cli": "oxlint --deny jsx-a11y/click-events-have-key-events --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/click-events-have-key-events.html",
            "description": "Enforce onClick is accompanied by at least one of the following: onKeyUp, onKeyDown, onKeyPress."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/heading-has-content",
        "cli": "oxlint --deny jsx-a11y/heading-has-content --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/heading-has-content.html",
            "description": "Enforce that heading elements (h1, h2, etc.) have content and that the content is accessible to screen readers. Accessible means that it is not hidden using the aria-hidden prop."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/aria-role",
        "cli": "oxlint --deny jsx-a11y/aria-role --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/aria-role.html",
            "description": "Elements with ARIA roles must use a valid, non-abstract ARIA role. A reference to role definitions can be found at WAI-ARIA site."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/anchor-has-content",
        "cli": "oxlint --deny jsx-a11y/anchor-has-content --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/anchor-has-content.html",
            "description": "Enforce that anchors have content and that the content is accessible to screen readers. Accessible means that it is not hidden using the aria-hidden prop."
        },
        "fixable": "üí°"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/img-redundant-alt",
        "cli": "oxlint --deny jsx-a11y/img-redundant-alt --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/img-redundant-alt.html",
            "description": "Enforce img alt attribute does not contain the word image, picture, or photo. Screenreaders already announce img elements as an image. There is no need to use words such as image, photo, and/or picture."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/label-has-associated-control",
        "cli": "oxlint --deny jsx-a11y/label-has-associated-control --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/label-has-associated-control.html",
            "description": "Enforce that a label tag has a text label and an associated control."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/lang",
        "cli": "oxlint --deny jsx-a11y/lang --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/lang.html",
            "description": "The lang prop on the <html> element must be a valid IETF's BCP 47 language tag."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/html-has-lang",
        "cli": "oxlint --deny jsx-a11y/html-has-lang --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/html-has-lang.html",
            "description": "Ensures that every HTML document has a lang attribute"
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/iframe-has-title",
        "cli": "oxlint --deny jsx-a11y/iframe-has-title --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/iframe-has-title.html",
            "description": "Enforce iframe elements have a title attribute."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/media-has-caption",
        "cli": "oxlint --deny jsx-a11y/media-has-caption --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/media-has-caption.html",
            "description": "Checks if <audio> and <video> elements have a <track> element for captions. This ensures media content is accessible to all users, including those with hearing impairments."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/no-aria-hidden-on-focusable",
        "cli": "oxlint --deny jsx-a11y/no-aria-hidden-on-focusable --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-aria-hidden-on-focusable.html",
            "description": "Enforces that aria-hidden=\"true\" is not set on focusable elements."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/mouse-events-have-key-events",
        "cli": "oxlint --deny jsx-a11y/mouse-events-have-key-events --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/mouse-events-have-key-events.html",
            "description": "Enforce onmouseover/onmouseout are accompanied by onfocus/onblur."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/no-access-key",
        "cli": "oxlint --deny jsx-a11y/no-access-key --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-access-key.html",
            "description": "Enforces that the accessKey prop is not used on any element to avoid complications with keyboard commands used by a screenreader."
        },
        "fixable": "üí°"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/no-autofocus",
        "cli": "oxlint --deny jsx-a11y/no-autofocus --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-autofocus.html",
            "description": "Enforce that autoFocus prop is not used on elements. Autofocusing elements can cause usability issues for sighted and non-sighted users, alike."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/no-noninteractive-tabindex",
        "cli": "oxlint --deny jsx-a11y/no-noninteractive-tabindex --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-noninteractive-tabindex.html",
            "description": "This rule checks that non-interactive elements don't have a tabIndex which would make them interactive via keyboard navigation."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/prefer-tag-over-role",
        "cli": "oxlint --deny jsx-a11y/prefer-tag-over-role --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/prefer-tag-over-role.html",
            "description": "Enforces using semantic HTML tags over role attribute."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/no-distracting-elements",
        "cli": "oxlint --deny jsx-a11y/no-distracting-elements --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-distracting-elements.html",
            "description": "Enforces that no distracting elements are used."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/role-has-required-aria-props",
        "cli": "oxlint --deny jsx-a11y/role-has-required-aria-props --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/role-has-required-aria-props.html",
            "description": "Enforces that elements with ARIA roles must have all required attributes for that role."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/role-supports-aria-props",
        "cli": "oxlint --deny jsx-a11y/role-supports-aria-props --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/role-supports-aria-props.html",
            "description": "Enforce that elements with explicit or implicit roles defined contain only aria-* properties supported by that role. Many ARIA attributes (states and properties) can only be used on elements with particular roles. Some elements have implicit roles, such as <a href=\"#\" />, which will resolve to role=\"link\"."
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/no-redundant-roles",
        "cli": "oxlint --deny jsx-a11y/no-redundant-roles --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/no-redundant-roles.html",
            "description": "Enforces that the explicit role property is not the same as implicit/default role property on element."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/tabindex-no-positive",
        "cli": "oxlint --deny jsx-a11y/tabindex-no-positive --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/tabindex-no-positive.html",
            "description": "Enforces that positive values for the tabIndex attribute are not used in JSX."
        },
        "fixable": "üöß"
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/scope",
        "cli": "oxlint --deny jsx-a11y/scope --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/scope.html",
            "description": "The scope prop should be used only on <th> elements."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/google-font-preconnect",
        "cli": "oxlint --deny nextjs/google-font-preconnect --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/google-font-preconnect.html",
            "description": "Enforces the presence of rel=\"preconnect\" when using Google Fonts via <link> tags."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/google-font-display",
        "cli": "oxlint --deny nextjs/google-font-display --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/google-font-display.html",
            "description": "Enforce font-display behavior with Google Fonts."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-async-client-component",
        "cli": "oxlint --deny nextjs/no-async-client-component --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-async-client-component.html",
            "description": "Prevents the use of async functions for client components in Next.js applications. This rule checks for any async function that:"
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-css-tags",
        "cli": "oxlint --deny nextjs/no-css-tags --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-css-tags.html",
            "description": "Prevents manual inclusion of stylesheets using <link> tags in Next.js applications. This rule checks for <link> tags with rel=\"stylesheet\" that reference local CSS files."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-before-interactive-script-outside-document",
        "cli": "oxlint --deny nextjs/no-before-interactive-script-outside-document --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-before-interactive-script-outside-document.html",
            "description": "Prevents the usage of next/script's beforeInteractive strategy outside of pages/_document.js. This rule ensures that scripts with the beforeInteractive loading strategy are only used in the document component where they are most effective."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-assign-module-variable",
        "cli": "oxlint --deny nextjs/no-assign-module-variable --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-assign-module-variable.html",
            "description": "Prevents the assignment or declaration of variables named module in Next.js applications."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-document-import-in-page",
        "cli": "oxlint --deny nextjs/no-document-import-in-page --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-document-import-in-page.html",
            "description": "Prevent importing next/document outside of pages/_document.js."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-head-element",
        "cli": "oxlint --deny nextjs/no-head-element --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-head-element.html",
            "description": "Prevents the usage of the native <head> element inside a Next.js application."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-duplicate-head",
        "cli": "oxlint --deny nextjs/no-duplicate-head --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-duplicate-head.html",
            "description": "Prevent duplicate usage of <Head> in `pages/_document.js``."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-head-import-in-document",
        "cli": "oxlint --deny nextjs/no-head-import-in-document --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-head-import-in-document.html",
            "description": "Prevents the usage of next/head inside a Next.js document."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-img-element",
        "cli": "oxlint --deny nextjs/no-img-element --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-img-element.html",
            "description": "Prevent the usage of <img> element due to slower LCP and higher bandwidth."
        },
        "fixable": "üöß"
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-html-link-for-pages",
        "cli": "oxlint --deny nextjs/no-html-link-for-pages --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-html-link-for-pages.html",
            "description": "Prevents the usage of <a> elements to navigate between Next.js pages."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-page-custom-font",
        "cli": "oxlint --deny nextjs/no-page-custom-font --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-page-custom-font.html",
            "description": "Prevent page-only custom fonts."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-styled-jsx-in-document",
        "cli": "oxlint --deny nextjs/no-styled-jsx-in-document --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-styled-jsx-in-document.html",
            "description": "Prevent usage of styled-jsx in pages/_document.js."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-sync-scripts",
        "cli": "oxlint --deny nextjs/no-sync-scripts --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-sync-scripts.html",
            "description": "This rule prevents the use of synchronous <script> tags in Next.js applications. It requires that any <script> tag with a src attribute must also have either the async or defer attribute."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-title-in-document-head",
        "cli": "oxlint --deny nextjs/no-title-in-document-head --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-title-in-document-head.html",
            "description": "Prevent usage of <title> with Head component from next/document."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-typos",
        "cli": "oxlint --deny nextjs/no-typos --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-typos.html",
            "description": "Prevent common typos in Next.js's data fetching functions"
        },
        "fixable": "üöß"
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-unwanted-polyfillio",
        "cli": "oxlint --deny nextjs/no-unwanted-polyfillio --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-unwanted-polyfillio.html",
            "description": "Prevent duplicate polyfills from Polyfill.io."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/no-script-component-in-head",
        "cli": "oxlint --deny nextjs/no-script-component-in-head --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/no-script-component-in-head.html",
            "description": "Prevent usage of next/script in next/head component."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/bad-array-method-on-arguments",
        "cli": "oxlint --deny oxc/bad-array-method-on-arguments",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-array-method-on-arguments.html",
            "description": "This rule applies when an array method is called on the arguments object itself."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/bad-char-at-comparison",
        "cli": "oxlint --deny oxc/bad-char-at-comparison",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-char-at-comparison.html",
            "description": "This rule warns when the return value of the charAt method is used to compare a string of length greater than 1."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/bad-comparison-sequence",
        "cli": "oxlint --deny oxc/bad-comparison-sequence",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-comparison-sequence.html",
            "description": "This rule applies when the comparison operator is applied two or more times in a row."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/bad-min-max-func",
        "cli": "oxlint --deny oxc/bad-min-max-func",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-min-max-func.html",
            "description": "Checks whether the clamp function Math.min(Math.max(x, y), z) always evaluate to a constant result because the arguments are in the wrong order."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/bad-replace-all-arg",
        "cli": "oxlint --deny oxc/bad-replace-all-arg",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-replace-all-arg.html",
            "description": "This rule warns when the replaceAll method is called with a regular expression that does not have the global flag (g)."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/double-comparisons",
        "cli": "oxlint --deny oxc/double-comparisons",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/double-comparisons.html",
            "description": "This rule checks for double comparisons in logical expressions."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/bad-object-literal-comparison",
        "cli": "oxlint --deny oxc/bad-object-literal-comparison",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-object-literal-comparison.html",
            "description": "Checks for comparisons between object and array literals."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/const-comparisons",
        "cli": "oxlint --deny oxc/const-comparisons",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/const-comparisons.html",
            "description": "Checks for redundant or logically impossible comparisons. This includes:"
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/erasing-op",
        "cli": "oxlint --deny oxc/erasing-op",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/erasing-op.html",
            "description": "Checks for erasing operations, e.g., `x * 0``."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/missing-throw",
        "cli": "oxlint --deny oxc/missing-throw",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/missing-throw.html",
            "description": "Checks whether the throw keyword is missing in front of a new expression."
        },
        "fixable": "üí°"
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/number-arg-out-of-range",
        "cli": "oxlint --deny oxc/number-arg-out-of-range",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/number-arg-out-of-range.html",
            "description": "Checks whether the radix or precision arguments of number-related functions exceeds the limit."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/uninvoked-array-callback",
        "cli": "oxlint --deny oxc/uninvoked-array-callback",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/uninvoked-array-callback.html",
            "description": "This rule applies when an Array function has a callback argument used for an array with empty slots."
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/no-callback-in-promise",
        "cli": "oxlint --deny promise/no-callback-in-promise --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-callback-in-promise.html",
            "description": "Disallows calling a callback function (cb()) inside a Promise.prototype.then() or Promise.prototype.catch()."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/only-used-in-recursion",
        "cli": "oxlint --deny oxc/only-used-in-recursion",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/only-used-in-recursion.html",
            "description": "Checks for arguments that are only used in recursion with no side-effects."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/next-script-for-ga",
        "cli": "oxlint --deny nextjs/next-script-for-ga --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/next-script-for-ga.html",
            "description": "Enforces the use of the next/script component when implementing Google Analytics in Next.js applications, instead of using regular <script> tags."
        },
        "fixable": ""
    },
    {
        "source": "nextjs",
        "plugin": "nextjs",
        "name": "nextjs/inline-script-id",
        "cli": "oxlint --deny nextjs/inline-script-id --nextjs-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/nextjs/inline-script-id.html",
            "description": "Enforces that all next/script components with inline content or dangerouslySetInnerHTML must have an id prop."
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/no-new-statics",
        "cli": "oxlint --deny promise/no-new-statics --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-new-statics.html",
            "description": "Disallows calling new on static Promise methods."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/valid-params",
        "cli": "oxlint --deny promise/valid-params --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/valid-params.html",
            "description": "Enforces the proper number of arguments are passed to Promise functions."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/forward-ref-uses-ref",
        "cli": "oxlint --deny react/forward-ref-uses-ref --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/forward-ref-uses-ref.html",
            "description": "Requires that components wrapped with forwardRef must have a ref parameter. Omitting the ref argument is usually a bug, and components not using ref don't need to be wrapped by forwardRef."
        },
        "fixable": "üí°"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-key",
        "cli": "oxlint --deny react/jsx-key --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-key.html",
            "description": "Enforce key prop for elements in array"
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/exhaustive-deps",
        "cli": "oxlint --deny react/exhaustive-deps --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/exhaustive-deps.html",
            "description": "Verifies the list of dependencies for Hooks like useEffect and similar."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏èüí°"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-no-duplicate-props",
        "cli": "oxlint --deny react/jsx-no-duplicate-props --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-no-duplicate-props.html",
            "description": "This rule prevents duplicate props in JSX elements."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-props-no-spread-multi",
        "cli": "oxlint --deny react/jsx-props-no-spread-multi --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-props-no-spread-multi.html",
            "description": "Enforces that any unique expression is only spread once."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-no-target-blank",
        "cli": "oxlint --deny react/jsx-no-target-blank --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-no-target-blank.html",
            "description": "This rule aims to prevent user generated link hrefs and form actions from creating security vulnerabilities by requiring rel='noreferrer' for external link hrefs and form actions, and optionally any dynamically generated link hrefs and form actions."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-no-undef",
        "cli": "oxlint --deny react/jsx-no-undef --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-no-undef.html",
            "description": "Disallow undeclared variables in JSX"
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-danger-with-children",
        "cli": "oxlint --deny react/no-danger-with-children --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-danger-with-children.html",
            "description": "Disallows when a DOM element is using both children and dangerouslySetInnerHTML properties."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-children-prop",
        "cli": "oxlint --deny react/no-children-prop --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-children-prop.html",
            "description": "Checks that children are not passed using a prop."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-direct-mutation-state",
        "cli": "oxlint --deny react/no-direct-mutation-state --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-direct-mutation-state.html",
            "description": "The restriction coder cannot directly change the value of this.state"
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-find-dom-node",
        "cli": "oxlint --deny react/no-find-dom-node --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-find-dom-node.html",
            "description": "This rule disallows the use of findDOMNode."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-is-mounted",
        "cli": "oxlint --deny react/no-is-mounted --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-is-mounted.html",
            "description": "This rule prevents using isMounted in ES6 classes"
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-render-return-value",
        "cli": "oxlint --deny react/no-render-return-value --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-render-return-value.html",
            "description": "This rule will warn you if you try to use the ReactDOM.render() return value."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/void-dom-elements-no-children",
        "cli": "oxlint --deny react/void-dom-elements-no-children --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/void-dom-elements-no-children.html",
            "description": "Disallow void DOM elements (e.g. <img />, <br />) from receiving children."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-string-refs",
        "cli": "oxlint --deny react/no-string-refs --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-string-refs.html",
            "description": "This rule prevents using string literals in ref attributes."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-duplicate-enum-values",
        "cli": "oxlint --deny typescript/no-duplicate-enum-values",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-duplicate-enum-values.html",
            "description": "Disallow duplicate enum member values."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-misused-new",
        "cli": "oxlint --deny typescript/no-misused-new",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-misused-new.html",
            "description": "Enforces valid definition of new and constructor. This rule prevents classes from defining a method named new and interfaces from defining a method named constructor."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-non-null-asserted-optional-chain",
        "cli": "oxlint --deny typescript/no-non-null-asserted-optional-chain",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-asserted-optional-chain.html",
            "description": "Disallow non-null assertions after an optional chain expression."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-this-alias",
        "cli": "oxlint --deny typescript/no-this-alias",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-this-alias.html",
            "description": "Disallow aliasing this"
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-unsafe-declaration-merging",
        "cli": "oxlint --deny typescript/no-unsafe-declaration-merging",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-declaration-merging.html",
            "description": "Disallow unsafe declaration merging."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-extra-non-null-assertion",
        "cli": "oxlint --deny typescript/no-extra-non-null-assertion",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-extra-non-null-assertion.html",
            "description": "Disallow extra non-null assertions."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-unnecessary-parameter-property-assignment",
        "cli": "oxlint --deny typescript/no-unnecessary-parameter-property-assignment",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-parameter-property-assignment.html",
            "description": "Prevents unnecessary assignment of parameter properties."
        },
        "fixable": "üí°"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-useless-empty-export",
        "cli": "oxlint --deny typescript/no-useless-empty-export",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-useless-empty-export.html",
            "description": "Disallow empty exports that don't change anything in a module file."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-wrapper-object-types",
        "cli": "oxlint --deny typescript/no-wrapper-object-types",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-wrapper-object-types.html",
            "description": "Disallow the use of wrapper object types."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/prefer-as-const",
        "cli": "oxlint --deny typescript/prefer-as-const",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-as-const.html",
            "description": "Enforce the use of as const over literal type."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/triple-slash-reference",
        "cli": "oxlint --deny typescript/triple-slash-reference",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/triple-slash-reference.html",
            "description": "Disallow certain triple slash directives in favor of ES6-style import declarations."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-await-in-promise-methods",
        "cli": "oxlint --deny unicorn/no-await-in-promise-methods",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-await-in-promise-methods.html",
            "description": "Disallow using await in Promise method parameters"
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-empty-file",
        "cli": "oxlint --deny unicorn/no-empty-file",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-empty-file.html",
            "description": "Disallows files that do not contain any meaningful code."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-invalid-fetch-options",
        "cli": "oxlint --deny unicorn/no-invalid-fetch-options",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-invalid-fetch-options.html",
            "description": "Disallow invalid options in fetch() and new Request(). Specifically, this rule ensures that a body is not provided when the method is GET or HEAD, as it will result in a TypeError."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-single-promise-in-promise-methods",
        "cli": "oxlint --deny unicorn/no-single-promise-in-promise-methods",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-single-promise-in-promise-methods.html",
            "description": "Disallow passing single-element arrays to Promise methods"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-invalid-remove-event-listener",
        "cli": "oxlint --deny unicorn/no-invalid-remove-event-listener",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-invalid-remove-event-listener.html",
            "description": "It warns when you use a non-function value as the second argument of removeEventListener."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-new-array",
        "cli": "oxlint --deny unicorn/no-new-array",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-new-array.html",
            "description": "Disallow new Array()."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-thenable",
        "cli": "oxlint --deny unicorn/no-thenable",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-thenable.html",
            "description": "Disallow then property"
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-useless-fallback-in-spread",
        "cli": "oxlint --deny unicorn/no-useless-fallback-in-spread",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-fallback-in-spread.html",
            "description": "Disallow useless fallback when spreading in object literals."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-useless-length-check",
        "cli": "oxlint --deny unicorn/no-useless-length-check",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-length-check.html",
            "description": "It checks for an unnecessary array length check in a logical expression."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-unnecessary-await",
        "cli": "oxlint --deny unicorn/no-unnecessary-await",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-await.html",
            "description": "Disallow awaiting on non-promise values."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-useless-spread",
        "cli": "oxlint --deny unicorn/no-useless-spread",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-spread.html",
            "description": "Disallows using spread syntax in following, unnecessary cases:"
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-string-starts-ends-with",
        "cli": "oxlint --deny unicorn/prefer-string-starts-ends-with",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-starts-ends-with.html",
            "description": "Prefer String#startsWith() and String#endsWith() over using a regex with /^foo/ or /foo$/."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-set-size",
        "cli": "oxlint --deny unicorn/prefer-set-size",
        "default": true,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-set-size.html",
            "description": "Prefer Set#size over Set#length when the Set is converted to an array."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "vitest",
        "plugin": "vitest",
        "name": "vitest/no-conditional-tests",
        "cli": "oxlint --deny vitest/no-conditional-tests --vitest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/vitest/no-conditional-tests.html",
            "description": "The rule disallows the use of conditional statements within test cases to ensure that tests are deterministic and clearly readable."
        },
        "fixable": ""
    },
    {
        "source": "vitest",
        "plugin": "vitest",
        "name": "vitest/require-local-test-context-for-concurrent-snapshots",
        "cli": "oxlint --deny vitest/require-local-test-context-for-concurrent-snapshots --vitest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/vitest/require-local-test-context-for-concurrent-snapshots.html",
            "description": "The rule is intended to ensure that concurrent snapshot tests are executed within a properly configured local test context."
        },
        "fixable": "üöß"
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-accumulating-spread",
        "cli": "oxlint --deny oxc/no-accumulating-spread",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-accumulating-spread.html",
            "description": "Prevents using object or array spreads on accumulators in Array.prototype.reduce() and in loops."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-array-index-key",
        "cli": "oxlint --deny react/no-array-index-key --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-array-index-key.html",
            "description": "Warn if an element uses an Array index in its key."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-useless-call",
        "cli": "oxlint --deny no-useless-call",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-call.html",
            "description": "Disallow unnecessary calls to .call() and .apply()"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-await-in-loop",
        "cli": "oxlint --deny no-await-in-loop",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-await-in-loop.html",
            "description": "This rule disallows the use of await within loop bodies. (for, for-in, for-of, while, do-while)."
        },
        "fixable": ""
    },
    {
        "source": "react_perf",
        "plugin": "react-perf",
        "name": "react-perf/jsx-no-jsx-as-prop",
        "cli": "oxlint --deny react-perf/jsx-no-jsx-as-prop --react-perf-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react_perf/jsx-no-jsx-as-prop.html",
            "description": "Prevent JSX elements that are local to the current method from being used as values of JSX props."
        },
        "fixable": ""
    },
    {
        "source": "react_perf",
        "plugin": "react-perf",
        "name": "react-perf/jsx-no-new-array-as-prop",
        "cli": "oxlint --deny react-perf/jsx-no-new-array-as-prop --react-perf-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react_perf/jsx-no-new-array-as-prop.html",
            "description": "Prevent Arrays that are local to the current method from being used as values of JSX props."
        },
        "fixable": ""
    },
    {
        "source": "react_perf",
        "plugin": "react-perf",
        "name": "react-perf/jsx-no-new-function-as-prop",
        "cli": "oxlint --deny react-perf/jsx-no-new-function-as-prop --react-perf-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react_perf/jsx-no-new-function-as-prop.html",
            "description": "Prevent Functions that are local to the current method from being used as values of JSX props."
        },
        "fixable": ""
    },
    {
        "source": "react_perf",
        "plugin": "react-perf",
        "name": "react-perf/jsx-no-new-object-as-prop",
        "cli": "oxlint --deny react-perf/jsx-no-new-object-as-prop --react-perf-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react_perf/jsx-no-new-object-as-prop.html",
            "description": "Prevent Objects that are local to the current method from being used as values of JSX props."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-array-find",
        "cli": "oxlint --deny unicorn/prefer-array-find",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-find.html",
            "description": "Encourages using Array.prototype.find instead of filter(...)[0] or similar patterns when only the first matching element is needed."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-array-flat-map",
        "cli": "oxlint --deny unicorn/prefer-array-flat-map",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-flat-map.html",
            "description": "Prefers the use of .flatMap() when map().flat() are used together."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "default-case",
        "cli": "oxlint --deny default-case",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-case.html",
            "description": "Require default cases in switch statements"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-alert",
        "cli": "oxlint --deny no-alert",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-alert.html",
            "description": "Disallow the use of alert, confirm, and prompt"
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-set-has",
        "cli": "oxlint --deny unicorn/prefer-set-has",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-set-has.html",
            "description": "Prefer Set#has() over Array#includes() when checking for existence or non-existence."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-console",
        "cli": "oxlint --deny no-console",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-console.html",
            "description": "Disallow the use of console."
        },
        "fixable": "üí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-bitwise",
        "cli": "oxlint --deny no-bitwise",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-bitwise.html",
            "description": "Disallow bitwise operators"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-div-regex",
        "cli": "oxlint --deny no-div-regex",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-div-regex.html",
            "description": "Disallow equal signs explicitly at the beginning of regular expressions."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-empty",
        "cli": "oxlint --deny no-empty",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty.html",
            "description": "Disallows empty block statements"
        },
        "fixable": "üí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-empty-function",
        "cli": "oxlint --deny no-empty-function",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-empty-function.html",
            "description": "Disallows the usages of empty functions"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-eq-null",
        "cli": "oxlint --deny no-eq-null",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-eq-null.html",
            "description": "Disallow null comparisons without type-checking operators."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-iterator",
        "cli": "oxlint --deny no-iterator",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-iterator.html",
            "description": "Disallow the use of the __iterator__ property"
        },
        "fixable": "üí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-plusplus",
        "cli": "oxlint --deny no-plusplus",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-plusplus.html",
            "description": "Disallow the unary operators ++ and --."
        },
        "fixable": "üí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-proto",
        "cli": "oxlint --deny no-proto",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-proto.html",
            "description": "Disallow the use of the __proto__ property"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-regex-spaces",
        "cli": "oxlint --deny no-regex-spaces",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-regex-spaces.html",
            "description": "Disallow 2+ consecutive spaces in regular expressions."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-undefined",
        "cli": "oxlint --deny no-undefined",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-undefined.html",
            "description": "Disallow the use of undefined as an identifier"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-restricted-globals",
        "cli": "oxlint --deny no-restricted-globals",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-restricted-globals.html",
            "description": "This rule allows you to specify global variable names that you don't want to use in your application."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-var",
        "cli": "oxlint --deny no-var",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-var.html",
            "description": "ECMAScript 6 allows programmers to create variables with block scope instead of function scope using the let and const keywords. Block scope is common in many other programming languages and helps programmers avoid mistakes."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unused-expressions",
        "cli": "oxlint --deny no-unused-expressions",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unused-expressions.html",
            "description": "This rule disallows unused expressions."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-void",
        "cli": "oxlint --deny no-void",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-void.html",
            "description": "Disallows the use of the void operator."
        },
        "fixable": "üí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "unicode-bom",
        "cli": "oxlint --deny unicode-bom",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/unicode-bom.html",
            "description": "Require or disallow Unicode byte order mark (BOM)"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/extensions",
        "cli": "oxlint --deny import/extensions --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/extensions.html",
            "description": "Some file resolve algorithms allow you to omit the file extension within the import source path. For example the node resolver (which does not yet support ESM/import) can resolve ./foo/bar to the absolute path /User/someone/foo/bar.js because the .js extension is resolved automatically by default in CJS. Depending on the resolver you can configure more extensions to get resolved automatically. In order to provide a consistent use of file extensions across your code base, this rule can enforce or disallow the use of certain file extensions."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-amd",
        "cli": "oxlint --deny import/no-amd --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-amd.html",
            "description": "Forbids the use of AMD require and define calls."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-commonjs",
        "cli": "oxlint --deny import/no-commonjs --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-commonjs.html",
            "description": "Forbids the use of CommonJS require calls. Also forbids module.exports and exports.*."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-cycle",
        "cli": "oxlint --deny import/no-cycle --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-cycle.html",
            "description": "Ensures that there is no resolvable path back to this module via its dependencies."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-default-export",
        "cli": "oxlint --deny import/no-default-export --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-default-export.html",
            "description": "Forbids a module from having default exports. This helps your editor provide better auto-import functionality, as named exports offer more explicit and predictable imports compared to default exports."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-dynamic-require",
        "cli": "oxlint --deny import/no-dynamic-require --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-dynamic-require.html",
            "description": "Forbids imports that use an expression for the module argument. This includes dynamically resolved paths in require or import statements."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-webpack-loader-syntax",
        "cli": "oxlint --deny import/no-webpack-loader-syntax --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-webpack-loader-syntax.html",
            "description": "Forbids using Webpack loader syntax directly in import or require statements."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/unambiguous",
        "cli": "oxlint --deny import/unambiguous --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/unambiguous.html",
            "description": "Warn if a module could be mistakenly parsed as a script and not pure ESM module"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-restricted-imports",
        "cli": "oxlint --deny no-restricted-imports",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-restricted-imports.html",
            "description": "This rule allows you to specify imports that you don‚Äôt want to use in your application. It applies to static imports only, not dynamic ones."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/empty-tags",
        "cli": "oxlint --deny jsdoc/empty-tags --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/empty-tags.html",
            "description": "Expects the following tags to be empty of any content:"
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/check-access",
        "cli": "oxlint --deny jsdoc/check-access --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/check-access.html",
            "description": "Checks that @access tags use one of the following values:"
        },
        "fixable": ""
    },
    {
        "source": "jsx_a11y",
        "plugin": "jsx-a11y",
        "name": "jsx-a11y/anchor-ambiguous-text",
        "cli": "oxlint --deny jsx-a11y/anchor-ambiguous-text --jsx-a11y-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsx_a11y/anchor-ambiguous-text.html",
            "description": "Inspects anchor link text for the use of ambiguous words."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/bad-bitwise-operator",
        "cli": "oxlint --deny oxc/bad-bitwise-operator",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/bad-bitwise-operator.html",
            "description": "This rule applies when bitwise operators are used where logical operators are expected."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-barrel-file",
        "cli": "oxlint --deny oxc/no-barrel-file",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-barrel-file.html",
            "description": "Disallow the use of barrel files where the file contains export * statements, and the total number of modules exceed a threshold."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-async-await",
        "cli": "oxlint --deny oxc/no-async-await",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-async-await.html",
            "description": "Disallows the use of async/await."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-const-enum",
        "cli": "oxlint --deny oxc/no-const-enum",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-const-enum.html",
            "description": "Disallow TypeScript const enum"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-optional-chaining",
        "cli": "oxlint --deny oxc/no-optional-chaining",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-optional-chaining.html",
            "description": "Disallow optional chaining."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-rest-spread-properties",
        "cli": "oxlint --deny oxc/no-rest-spread-properties",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-rest-spread-properties.html",
            "description": "Disallow Object Rest/Spread Properties."
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/spec-only",
        "cli": "oxlint --deny promise/spec-only --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/spec-only.html",
            "description": "Disallow use of non-standard Promise static methods."
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/catch-or-return",
        "cli": "oxlint --deny promise/catch-or-return --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/catch-or-return.html",
            "description": "Ensure that each time a then() is applied to a promise, a catch() must be applied as well. Exceptions are made for promises returned from a function."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-filename-extension",
        "cli": "oxlint --deny react/jsx-filename-extension --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-filename-extension.html",
            "description": "Enforces consistent use of the JSX file extension."
        },
        "fixable": "üöß"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/forbid-elements",
        "cli": "oxlint --deny react/forbid-elements --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/forbid-elements.html",
            "description": "Allows you to configure a list of forbidden elements and to specify their desired replacements."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/button-has-type",
        "cli": "oxlint --deny react/button-has-type --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/button-has-type.html",
            "description": "Enforces explicit type attribute for all the button HTML elements."
        },
        "fixable": ""
    },
    {
        "source": "node",
        "plugin": "node",
        "name": "node/no-new-require",
        "cli": "oxlint --deny node/no-new-require --node-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/node/no-new-require.html",
            "description": "Warn about calling new on require."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-danger",
        "cli": "oxlint --deny react/no-danger --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-danger.html",
            "description": "This rule prevents the use of dangerouslySetInnerHTML prop."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-unknown-property",
        "cli": "oxlint --deny react/no-unknown-property --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-unknown-property.html",
            "description": "Disallow usage of unknown DOM property."
        },
        "fixable": "üöß"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/explicit-module-boundary-types",
        "cli": "oxlint --deny typescript/explicit-module-boundary-types",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/explicit-module-boundary-types.html",
            "description": "Require explicit return and argument types on exported functions' and classes' public class methods."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-dynamic-delete",
        "cli": "oxlint --deny typescript/no-dynamic-delete",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-dynamic-delete.html",
            "description": "Disallow using the delete operator on computed key expressions."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-empty-object-type",
        "cli": "oxlint --deny typescript/no-empty-object-type",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-empty-object-type.html",
            "description": "To avoid confusion around the {} type allowing any non-nullish value, this rule bans usage of the {} type. That includes interfaces and object type aliases with no fields."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-explicit-any",
        "cli": "oxlint --deny typescript/no-explicit-any",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-explicit-any.html",
            "description": "Disallows explicit use of the any type."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-namespace",
        "cli": "oxlint --deny typescript/no-namespace",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-namespace.html",
            "description": "Disallow TypeScript namespaces."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-non-null-asserted-nullish-coalescing",
        "cli": "oxlint --deny typescript/no-non-null-asserted-nullish-coalescing",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-asserted-nullish-coalescing.html",
            "description": "Disallow non-null assertions in the left operand of a nullish coalescing operator."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-non-null-assertion",
        "cli": "oxlint --deny typescript/no-non-null-assertion",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-non-null-assertion.html",
            "description": "Disallow non-null assertions using the ! postfix operator."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-var-requires",
        "cli": "oxlint --deny typescript/no-var-requires",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-var-requires.html",
            "description": "Disallow require statements except in import statements"
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-import-type-side-effects",
        "cli": "oxlint --deny typescript/no-import-type-side-effects",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-import-type-side-effects.html",
            "description": "Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/prefer-literal-enum-member",
        "cli": "oxlint --deny typescript/prefer-literal-enum-member",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-literal-enum-member.html",
            "description": "Explicit enum value must only be a literal value (string, number, boolean, etc)."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-array-for-each",
        "cli": "oxlint --deny unicorn/no-array-for-each",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-for-each.html",
            "description": "Forbids the use of Array#forEach in favor of a for loop."
        },
        "fixable": "üöß"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-require-imports",
        "cli": "oxlint --deny typescript/no-require-imports",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-require-imports.html",
            "description": "Forbids the use of CommonJS require calls."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-array-reduce",
        "cli": "oxlint --deny unicorn/no-array-reduce",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-reduce.html",
            "description": "Disallow Array#reduce() and Array#reduceRight()."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-anonymous-default-export",
        "cli": "oxlint --deny unicorn/no-anonymous-default-export",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-anonymous-default-export.html",
            "description": "Disallows anonymous functions and classes as default exports."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-length-as-slice-end",
        "cli": "oxlint --deny unicorn/no-length-as-slice-end",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-length-as-slice-end.html",
            "description": "Disallow using length as the end argument of a slice call."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-document-cookie",
        "cli": "oxlint --deny unicorn/no-document-cookie",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-document-cookie.html",
            "description": "Disallow direct use of document.cookie."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-abusive-eslint-disable",
        "cli": "oxlint --deny unicorn/no-abusive-eslint-disable",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-abusive-eslint-disable.html",
            "description": "Disallows oxlint-disable or eslint-disable comments without specifying rules."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-process-exit",
        "cli": "oxlint --deny unicorn/no-process-exit",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-process-exit.html",
            "description": "Disallow process.exit()."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-modern-math-apis",
        "cli": "oxlint --deny unicorn/prefer-modern-math-apis",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-modern-math-apis.html",
            "description": "Checks for usage of legacy patterns for mathematical operations."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-node-protocol",
        "cli": "oxlint --deny unicorn/prefer-node-protocol",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-node-protocol.html",
            "description": "Prefer using the node:protocol when importing Node.js builtin modules"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-number-properties",
        "cli": "oxlint --deny unicorn/prefer-number-properties",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-number-properties.html",
            "description": "Disallows use of parseInt(), parseFloat(), isNan(), isFinite(), Nan, Infinity and -Infinity as global variables."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-magic-array-flat-depth",
        "cli": "oxlint --deny unicorn/no-magic-array-flat-depth",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-magic-array-flat-depth.html",
            "description": "Disallow magic numbers for Array.prototype.flat depth."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-extend-native",
        "cli": "oxlint --deny no-extend-native",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extend-native.html",
            "description": "Prevents extending native global objects such as Object, String, or Array with new properties."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-new",
        "cli": "oxlint --deny no-new",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new.html",
            "description": "Disallow new operators outside of assignments or comparisons."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-extra-bind",
        "cli": "oxlint --deny no-extra-bind",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-bind.html",
            "description": "Disallow unnecessary calls to .bind()"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unexpected-multiline",
        "cli": "oxlint --deny no-unexpected-multiline",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unexpected-multiline.html",
            "description": "In most cases, semicolons are not required in JavaScript in order for code to be parsed and executed as expected. Typically this occurs because semicolons are automatically inserted based on a fixed set of rules. This rule exists to detect those cases where a semicolon is NOT inserted automatically, and may be parsed differently than expected."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "block-scoped-var",
        "cli": "oxlint --deny block-scoped-var",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/block-scoped-var.html",
            "description": "Generates warnings when variables are used outside of the block in which they were defined. This emulates C-style block scope."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unneeded-ternary",
        "cli": "oxlint --deny no-unneeded-ternary",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unneeded-ternary.html",
            "description": "Disallow ternary operators when simpler alternatives exist"
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-useless-concat",
        "cli": "oxlint --deny no-useless-concat",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-concat.html",
            "description": "Disallow unnecessary concatenation of literals or template literals"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-useless-constructor",
        "cli": "oxlint --deny no-useless-constructor",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-useless-constructor.html",
            "description": "Disallow constructors that can be safely removed without changing how the class works."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-empty-named-blocks",
        "cli": "oxlint --deny import/no-empty-named-blocks --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-empty-named-blocks.html",
            "description": "Enforces that named import blocks are not empty."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-named-as-default-member",
        "cli": "oxlint --deny import/no-named-as-default-member --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-as-default-member.html",
            "description": "Reports the use of an exported name (named export) as a property on the default export. This occurs when trying to access a named export through the default export, which is incorrect."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-named-as-default",
        "cli": "oxlint --deny import/no-named-as-default --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-as-default.html",
            "description": "Reports use of an exported name as the locally imported name of a default export. This happens when an imported default export is assigned a name that conflicts with a named export from the same module."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-self-import",
        "cli": "oxlint --deny import/no-self-import --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-self-import.html",
            "description": "Forbids a module from importing itself. This can sometimes happen accidentally, especially during refactoring."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-absolute-path",
        "cli": "oxlint --deny import/no-absolute-path --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-absolute-path.html",
            "description": "This rule forbids the import of modules using absolute paths."
        },
        "fixable": "üöß"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-unassigned-import",
        "cli": "oxlint --deny import/no-unassigned-import --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-unassigned-import.html",
            "description": "This rule aims to remove modules with side-effects by reporting when a module is imported but not assigned."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-commented-out-tests",
        "cli": "oxlint --deny jest/no-commented-out-tests --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-commented-out-tests.html",
            "description": "This rule raises a warning about commented out tests. It's similar to no-disabled-tests rule."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/approx-constant",
        "cli": "oxlint --deny oxc/approx-constant",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/approx-constant.html",
            "description": "Disallows the use of approximate constants, instead preferring the use of the constants in the Math object."
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-async-endpoint-handlers",
        "cli": "oxlint --deny oxc/no-async-endpoint-handlers",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-async-endpoint-handlers.html",
            "description": "Disallows the use of async functions as Express endpoint handlers."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/iframe-missing-sandbox",
        "cli": "oxlint --deny react/iframe-missing-sandbox --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/iframe-missing-sandbox.html",
            "description": "Enforce sandbox attribute on iframe elements"
        },
        "fixable": "üöß"
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/misrefactored-assign-op",
        "cli": "oxlint --deny oxc/misrefactored-assign-op",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/misrefactored-assign-op.html",
            "description": "https://rust-lang.github.io/rust-clippy/master/#/misrefactored_assign_op"
        },
        "fixable": "üöß"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-no-comment-textnodes",
        "cli": "oxlint --deny react/jsx-no-comment-textnodes --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-no-comment-textnodes.html",
            "description": "This rule prevents comment strings (e.g. beginning with // or /*) from being accidentally injected as a text node in JSX statements."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-no-script-url",
        "cli": "oxlint --deny react/jsx-no-script-url --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-no-script-url.html",
            "description": "Disallow usage of javascript: URLs"
        },
        "fixable": "üöß"
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/no-promise-in-callback",
        "cli": "oxlint --deny promise/no-promise-in-callback --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-promise-in-callback.html",
            "description": "Disallows the use of Promises within error-first callback functions."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/react-in-jsx-scope",
        "cli": "oxlint --deny react/react-in-jsx-scope --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/react-in-jsx-scope.html",
            "description": "Disallow missing React when using JSX"
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/explicit-function-return-type",
        "cli": "oxlint --deny typescript/explicit-function-return-type",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/explicit-function-return-type.html",
            "description": "This rule enforces that functions have an explicit return type annotation."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/consistent-function-scoping",
        "cli": "oxlint --deny unicorn/consistent-function-scoping",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-function-scoping.html",
            "description": "Disallow functions that are declared in a scope which does not capture any variables from the outer scope."
        },
        "fixable": "üöß"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-namespace",
        "cli": "oxlint --deny react/no-namespace --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-namespace.html",
            "description": "Enforce that namespaces are not used in React elements."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/style-prop-object",
        "cli": "oxlint --deny react/style-prop-object --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/style-prop-object.html",
            "description": "Require that the value of the prop style be an object or a variable that is an object."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-confusing-non-null-assertion",
        "cli": "oxlint --deny typescript/no-confusing-non-null-assertion",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-confusing-non-null-assertion.html",
            "description": "Disallow non-null assertion in locations that may be confusing."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-accessor-recursion",
        "cli": "oxlint --deny unicorn/no-accessor-recursion",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-accessor-recursion.html",
            "description": "Disallow recursive access to this within getters and setters"
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-extraneous-class",
        "cli": "oxlint --deny typescript/no-extraneous-class",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-extraneous-class.html",
            "description": "This rule reports when a class has no non-static members, such as for a class used exclusively as a static namespace. This rule also reports classes that have only a constructor and no fields. Those classes can generally be replaced with a standalone function."
        },
        "fixable": "‚ö†Ô∏èüí°"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-instanceof-builtins",
        "cli": "oxlint --deny unicorn/no-instanceof-builtins",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-instanceof-builtins.html",
            "description": "Disallows the use of instanceof with ECMAScript built-in constructors because:"
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/require-post-message-target-origin",
        "cli": "oxlint --deny unicorn/require-post-message-target-origin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-post-message-target-origin.html",
            "description": "Enforce using the targetOrigin argument with window.postMessage()"
        },
        "fixable": "üí°"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-add-event-listener",
        "cli": "oxlint --deny unicorn/prefer-add-event-listener",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-add-event-listener.html",
            "description": "Enforces the use of .addEventListener() and .removeEventListener() over their on-function counterparts."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "eqeqeq",
        "cli": "oxlint --deny eqeqeq",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/eqeqeq.html",
            "description": "Requires the use of the === and !== operators."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "max-classes-per-file",
        "cli": "oxlint --deny max-classes-per-file",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-classes-per-file.html",
            "description": "Enforce a maximum number of classes per file"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "array-callback-return",
        "cli": "oxlint --deny array-callback-return",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/array-callback-return.html",
            "description": "Enforce return statements in callbacks of array methods"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "max-depth",
        "cli": "oxlint --deny max-depth",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-depth.html",
            "description": "Enforce a maximum depth that blocks can be nested. This rule helps to limit the complexity of nested blocks, improving readability and maintainability by ensuring that code does not become too deeply nested."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "max-lines",
        "cli": "oxlint --deny max-lines",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-lines.html",
            "description": "Enforce a maximum number of lines per file."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-unnecessary-type-constraint",
        "cli": "oxlint --deny typescript/no-unnecessary-type-constraint",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unnecessary-type-constraint.html",
            "description": "Disallow unnecessary constraints on generic types."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "max-nested-callbacks",
        "cli": "oxlint --deny max-nested-callbacks",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-nested-callbacks.html",
            "description": "Enforce a maximum depth that callbacks can be nested. This rule helps to limit the complexity of callback nesting, ensuring that callbacks do not become too deeply nested, improving code readability and maintainability."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-array-constructor",
        "cli": "oxlint --deny no-array-constructor",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-array-constructor.html",
            "description": "Disallows creating arrays with the Array constructor."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "max-lines-per-function",
        "cli": "oxlint --deny max-lines-per-function",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-lines-per-function.html",
            "description": "Enforce a maximum number of lines of code in a function. This rule ensures that functions do not exceed a specified line count, promoting smaller, more focused functions that are easier to maintain and understand."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-constructor-return",
        "cli": "oxlint --deny no-constructor-return",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-constructor-return.html",
            "description": "Disallow returning value from constructor"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-else-return",
        "cli": "oxlint --deny no-else-return",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-else-return.html",
            "description": "Disallow else blocks after return statements in if statements"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-case-declarations",
        "cli": "oxlint --deny no-case-declarations",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-case-declarations.html",
            "description": "Disallow lexical declarations in case clauses."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-fallthrough",
        "cli": "oxlint --deny no-fallthrough",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-fallthrough.html",
            "description": "Disallow fallthrough of case statements"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-lonely-if",
        "cli": "oxlint --deny no-lonely-if",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-lonely-if.html",
            "description": "Disallow if statements as the only statement in else blocks"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-negated-condition",
        "cli": "oxlint --deny no-negated-condition",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-negated-condition.html",
            "description": "Disallow negated conditions."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-inner-declarations",
        "cli": "oxlint --deny no-inner-declarations",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-inner-declarations.html",
            "description": "Disallow variable or function declarations in nested blocks"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-object-constructor",
        "cli": "oxlint --deny no-object-constructor",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-object-constructor.html",
            "description": "Disallow calls to the Object constructor without an argument"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-new-wrappers",
        "cli": "oxlint --deny no-new-wrappers",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new-wrappers.html",
            "description": "Disallow new operators with the String, Number, and Boolean objects"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-prototype-builtins",
        "cli": "oxlint --deny no-prototype-builtins",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-prototype-builtins.html",
            "description": "Disallow calling some Object.prototype methods directly on objects"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-self-compare",
        "cli": "oxlint --deny no-self-compare",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-self-compare.html",
            "description": "Disallow comparisons where both sides are exactly the same"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-throw-literal",
        "cli": "oxlint --deny no-throw-literal",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-throw-literal.html",
            "description": "Disallows throwing literals or non-Error objects as exceptions."
        },
        "fixable": "üí°"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-redeclare",
        "cli": "oxlint --deny no-redeclare",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-redeclare.html",
            "description": "This rule disallows redeclaring variables within the same scope, ensuring that each variable is declared only once. It helps avoid confusion and unintended behavior in code."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "require-await",
        "cli": "oxlint --deny require-await",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/require-await.html",
            "description": "Disallow async functions which have no await expression."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "symbol-description",
        "cli": "oxlint --deny symbol-description",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/symbol-description.html",
            "description": "Require symbol descriptions."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "sort-vars",
        "cli": "oxlint --deny sort-vars",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-vars.html",
            "description": "When declaring multiple variables within the same block, sorting variable names make it easier to find necessary variable easier at a later time."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "radix",
        "cli": "oxlint --deny radix",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/radix.html",
            "description": "Enforce the consistent use of the radix argument when using parseInt()."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/max-dependencies",
        "cli": "oxlint --deny import/max-dependencies --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/max-dependencies.html",
            "description": "Forbid modules to have too many dependencies (import or require statements)."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-param",
        "cli": "oxlint --deny jsdoc/require-param --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param.html",
            "description": "Requires that all function parameters are documented with JSDoc @param tags."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-param-description",
        "cli": "oxlint --deny jsdoc/require-param-description --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param-description.html",
            "description": "Requires that each @param tag has a description value."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-conditional-in-test",
        "cli": "oxlint --deny jest/no-conditional-in-test --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-conditional-in-test.html",
            "description": "Disallow conditional statements in tests."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-param-name",
        "cli": "oxlint --deny jsdoc/require-param-name --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param-name.html",
            "description": "Requires that all @param tags have names."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-returns",
        "cli": "oxlint --deny jsdoc/require-returns --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns.html",
            "description": "Requires that return statements are documented. Will also report if multiple @returns tags are present."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-param-type",
        "cli": "oxlint --deny jsdoc/require-param-type --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-param-type.html",
            "description": "Requires that each @param tag has a type value (within curly brackets)."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-returns-type",
        "cli": "oxlint --deny jsdoc/require-returns-type --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns-type.html",
            "description": "Requires that @returns tag has a type value (in curly brackets)."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/checked-requires-onchange-or-readonly",
        "cli": "oxlint --deny react/checked-requires-onchange-or-readonly --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/checked-requires-onchange-or-readonly.html",
            "description": "This rule enforces onChange or readonly attribute for checked property of input elements. It also warns when checked and defaultChecked properties are used together."
        },
        "fixable": ""
    },
    {
        "source": "jsdoc",
        "plugin": "jsdoc",
        "name": "jsdoc/require-returns-description",
        "cli": "oxlint --deny jsdoc/require-returns-description --jsdoc-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jsdoc/require-returns-description.html",
            "description": "Requires that the @returns tag has a description value. The error will not be reported if the return value is voidor undefined or if it is Promise<void> or Promise<undefined>."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-no-useless-fragment",
        "cli": "oxlint --deny react/jsx-no-useless-fragment --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-no-useless-fragment.html",
            "description": "Disallow unnecessary fragments."
        },
        "fixable": "üí°"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-unescaped-entities",
        "cli": "oxlint --deny react/no-unescaped-entities --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-unescaped-entities.html",
            "description": "This rule prevents characters that you may have meant as JSX escape characters from being accidentally injected as a text node in JSX statements."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/rules-of-hooks",
        "cli": "oxlint --deny react/rules-of-hooks --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/rules-of-hooks.html",
            "description": "This enforces the Rules of Hooks"
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/ban-types",
        "cli": "oxlint --deny typescript/ban-types",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-types.html",
            "description": "This rule bans specific types and can suggest alternatives. Note that it does not ban the corresponding runtime objects from being used."
        },
        "fixable": "üöß"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/ban-ts-comment",
        "cli": "oxlint --deny typescript/ban-ts-comment",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-ts-comment.html",
            "description": "This rule lets you set which directive comments you want to allow in your codebase."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-unsafe-function-type",
        "cli": "oxlint --deny typescript/no-unsafe-function-type",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-unsafe-function-type.html",
            "description": "Disallow using the unsafe built-in Function type."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/prefer-enum-initializers",
        "cli": "oxlint --deny typescript/prefer-enum-initializers",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-enum-initializers.html",
            "description": "Require each enum member value to be explicitly initialized."
        },
        "fixable": "üöß"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/prefer-ts-expect-error",
        "cli": "oxlint --deny typescript/prefer-ts-expect-error",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-ts-expect-error.html",
            "description": "Enforce using @ts-expect-error over @ts-ignore."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/escape-case",
        "cli": "oxlint --deny unicorn/escape-case",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/escape-case.html",
            "description": "Enforces defining escape sequence values with uppercase characters rather than lowercase ones. This promotes readability by making the escaped value more distinguishable from the identifier."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/consistent-empty-array-spread",
        "cli": "oxlint --deny unicorn/consistent-empty-array-spread",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-empty-array-spread.html",
            "description": "When spreading a ternary in an array, we can use both [] and '' as fallbacks, but it's better to have consistent types in both branches."
        },
        "fixable": "üí°"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/explicit-length-check",
        "cli": "oxlint --deny unicorn/explicit-length-check",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/explicit-length-check.html",
            "description": "Enforce explicitly comparing the length or size property of a value."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-hex-escape",
        "cli": "oxlint --deny unicorn/no-hex-escape",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-hex-escape.html",
            "description": "Enforces a convention of using Unicode escapes instead of hexadecimal escapes for consistency and clarity."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/new-for-builtins",
        "cli": "oxlint --deny unicorn/new-for-builtins",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/new-for-builtins.html",
            "description": "Enforces the use of new for the following builtins: Object, Array, ArrayBuffer, BigInt64Array, BigUint64Array, DataView, Date, Error, Float32Array, Float64Array, Function, Int8Array, Int16Array, Int32Array, Map, WeakMap, Set, WeakSet, Promise, RegExp, Uint8Array, Uint16Array, Uint32Array, Uint8ClampedArray, SharedArrayBuffer, Proxy, WeakRef, FinalizationRegistry."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-instanceof-array",
        "cli": "oxlint --deny unicorn/no-instanceof-array",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-instanceof-array.html",
            "description": "Require Array.isArray() instead of instanceof Array."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/consistent-assert",
        "cli": "oxlint --deny unicorn/consistent-assert",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-assert.html",
            "description": "Enforces consistent usage of the assert module."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-lonely-if",
        "cli": "oxlint --deny unicorn/no-lonely-if",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-lonely-if.html",
            "description": "Disallow if statements as the only statement in if blocks without else."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-new-buffer",
        "cli": "oxlint --deny unicorn/no-new-buffer",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-new-buffer.html",
            "description": "Disallows the deprecated new Buffer() constructor."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-negation-in-equality-check",
        "cli": "oxlint --deny unicorn/no-negation-in-equality-check",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-negation-in-equality-check.html",
            "description": "Disallow negated expressions on the left of (in)equality checks."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-object-as-default-parameter",
        "cli": "oxlint --deny unicorn/no-object-as-default-parameter",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-object-as-default-parameter.html",
            "description": "Disallow the use of an object literal as a default value for a parameter."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-static-only-class",
        "cli": "oxlint --deny unicorn/no-static-only-class",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-static-only-class.html",
            "description": "Disallow classes that only have static members."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-this-assignment",
        "cli": "oxlint --deny unicorn/no-this-assignment",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-this-assignment.html",
            "description": "Disallow assigning this to a variable."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-unnecessary-array-flat-depth",
        "cli": "oxlint --deny unicorn/no-unnecessary-array-flat-depth",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-array-flat-depth.html",
            "description": "Disallows passing 1 to Array.prototype.flat"
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-typeof-undefined",
        "cli": "oxlint --deny unicorn/no-typeof-undefined",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-typeof-undefined.html",
            "description": "Disallow typeof comparisons with undefined."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-unnecessary-slice-end",
        "cli": "oxlint --deny unicorn/no-unnecessary-slice-end",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unnecessary-slice-end.html",
            "description": "Omitting the end argument defaults it to the object's .length. Passing it explicitly or using Infinity is unnecessary"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-unreadable-iife",
        "cli": "oxlint --deny unicorn/no-unreadable-iife",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unreadable-iife.html",
            "description": "This rule disallows IIFEs with a parenthesized arrow function body."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-useless-promise-resolve-reject",
        "cli": "oxlint --deny unicorn/no-useless-promise-resolve-reject",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-promise-resolve-reject.html",
            "description": "Disallows returning values wrapped in Promise.resolve or Promise.reject in an async function or a Promise#then/catch/finally callback."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-array-flat",
        "cli": "oxlint --deny unicorn/prefer-array-flat",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-flat.html",
            "description": "Prefers Array#flat() over legacy techniques to flatten arrays."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-useless-undefined",
        "cli": "oxlint --deny unicorn/no-useless-undefined",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-undefined.html",
            "description": "Do not use useless undefined."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-array-some",
        "cli": "oxlint --deny unicorn/prefer-array-some",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-some.html",
            "description": "Prefers using Array#some() over Array#find(), Array#findLast() with comparing to undefined, or Array#findIndex(), Array#findLastIndex() and a non-zero length check on the result of Array#filter()"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-useless-switch-case",
        "cli": "oxlint --deny unicorn/no-useless-switch-case",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-useless-switch-case.html",
            "description": "Disallows useless default cases in switch statements."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-blob-reading-methods",
        "cli": "oxlint --deny unicorn/prefer-blob-reading-methods",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-blob-reading-methods.html",
            "description": "Recommends using Blob#text() and Blob#arrayBuffer() over FileReader#readAsText() and FileReader#readAsArrayBuffer()."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-date-now",
        "cli": "oxlint --deny unicorn/prefer-date-now",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-date-now.html",
            "description": "Prefers use of Date.now() over new Date().getTime() or new Date().valueOf()."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-code-point",
        "cli": "oxlint --deny unicorn/prefer-code-point",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-code-point.html",
            "description": "Prefers usage of String.prototype.codePointAt over String.prototype.charCodeAt. Prefers usage of String.fromCodePoint over String.fromCharCode."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-dom-node-append",
        "cli": "oxlint --deny unicorn/prefer-dom-node-append",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-append.html",
            "description": "Enforces the use of, for example, document.body.append(div); over document.body.appendChild(div); for DOM nodes."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-dom-node-remove",
        "cli": "oxlint --deny unicorn/prefer-dom-node-remove",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-remove.html",
            "description": "Prefers the use of child.remove() over parentNode.removeChild(child)."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-dom-node-dataset",
        "cli": "oxlint --deny unicorn/prefer-dom-node-dataset",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-dataset.html",
            "description": "Use .dataset on DOM elements over getAttribute(‚Ä¶), .setAttribute(‚Ä¶), .removeAttribute(‚Ä¶) and .hasAttribute(‚Ä¶)."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-math-min-max",
        "cli": "oxlint --deny unicorn/prefer-math-min-max",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-math-min-max.html",
            "description": "Prefers use of Math.min() and Math.max() instead of ternary expressions when performing simple comparisons for more concise, easier to understand, and less prone to errors."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-math-trunc",
        "cli": "oxlint --deny unicorn/prefer-math-trunc",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-math-trunc.html",
            "description": "Prefers use of Math.trunc() instead of bitwise operations for clarity and more reliable results."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-event-target",
        "cli": "oxlint --deny unicorn/prefer-event-target",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-event-target.html",
            "description": "Prefers EventTarget over EventEmitter."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-prototype-methods",
        "cli": "oxlint --deny unicorn/prefer-prototype-methods",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-prototype-methods.html",
            "description": "This rule prefers borrowing methods from the prototype instead of the instance."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-regexp-test",
        "cli": "oxlint --deny unicorn/prefer-regexp-test",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-regexp-test.html",
            "description": "Prefers RegExp#test() over String#match() and String#exec()."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-native-coercion-functions",
        "cli": "oxlint --deny unicorn/prefer-native-coercion-functions",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-native-coercion-functions.html",
            "description": "Prefers built in functions, over custom ones with the same functionality."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-string-replace-all",
        "cli": "oxlint --deny unicorn/prefer-string-replace-all",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-replace-all.html",
            "description": "Prefers String#replaceAll() over String#replace() when using a regex with the global flag."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-string-slice",
        "cli": "oxlint --deny unicorn/prefer-string-slice",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-slice.html",
            "description": "Prefer String#slice() over String#substr() and String#substring()."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-query-selector",
        "cli": "oxlint --deny unicorn/prefer-query-selector",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-query-selector.html",
            "description": "Prefer .querySelector() over .getElementById(), .querySelectorAll() over .getElementsByClassName() and .getElementsByTagName()."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-type-error",
        "cli": "oxlint --deny unicorn/prefer-type-error",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-type-error.html",
            "description": "Enforce throwing a TypeError instead of a generic Error after a type checking if-statement."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "arrow-body-style",
        "cli": "oxlint --deny arrow-body-style",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/arrow-body-style.html",
            "description": "This rule can enforce or disallow the use of braces around arrow function body."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "curly",
        "cli": "oxlint --deny curly",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/curly.html",
            "description": "This rule enforces the use of curly braces {} for all control statements (if, else, for, while, do, etc.). It ensures that all blocks are enclosed in curly braces to improve code clarity and maintainability."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "func-names",
        "cli": "oxlint --deny func-names",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/func-names.html",
            "description": "Require or disallow named function expressions."
        },
        "fixable": "üõ†Ô∏èüí°"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/require-number-to-fixed-digits-argument",
        "cli": "oxlint --deny unicorn/require-number-to-fixed-digits-argument",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-number-to-fixed-digits-argument.html",
            "description": "Enforce using the digits argument with Number.toFixed()"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "grouped-accessor-pairs",
        "cli": "oxlint --deny grouped-accessor-pairs",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/grouped-accessor-pairs.html",
            "description": "Require grouped accessor pairs in object literals and classes"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "id-length",
        "cli": "oxlint --deny id-length",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/id-length.html",
            "description": "This rule enforces a minimum and/or maximum identifier length convention by counting the graphemes for a given identifier."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "default-case-last",
        "cli": "oxlint --deny default-case-last",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-case-last.html",
            "description": "Enforce default clauses in switch statements to be last"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "init-declarations",
        "cli": "oxlint --deny init-declarations",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/init-declarations.html",
            "description": "Require or disallow initialization in variable declarations"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "max-params",
        "cli": "oxlint --deny max-params",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/max-params.html",
            "description": "Enforce a maximum number of parameters in function definitions which by default is three."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "func-style",
        "cli": "oxlint --deny func-style",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/func-style.html",
            "description": "Enforce the consistent use of either function declarations or expressions assigned to variables"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-duplicate-imports",
        "cli": "oxlint --deny no-duplicate-imports",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-duplicate-imports.html",
            "description": "Disallow duplicate module imports."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-extra-label",
        "cli": "oxlint --deny no-extra-label",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-extra-label.html",
            "description": "Disallow unnecessary labels."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-label-var",
        "cli": "oxlint --deny no-label-var",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-label-var.html",
            "description": "Disallow labels that share a name with a variable."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "new-cap",
        "cli": "oxlint --deny new-cap",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/new-cap.html",
            "description": "This rule requires constructor names to begin with a capital letter."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-lone-blocks",
        "cli": "oxlint --deny no-lone-blocks",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-lone-blocks.html",
            "description": "Disallows unnecessary standalone block statements."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-magic-numbers",
        "cli": "oxlint --deny no-magic-numbers",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-magic-numbers.html",
            "description": "This rule aims to make code more readable and refactoring easier by ensuring that special numbers are declared as constants to make their meaning explicit. The current implementation does not support BigInt numbers inside array indexes."
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-labels",
        "cli": "oxlint --deny no-labels",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-labels.html",
            "description": "Disallow labeled statements."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-multi-assign",
        "cli": "oxlint --deny no-multi-assign",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-multi-assign.html",
            "description": "Disallow use of chained assignment expressions."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-multi-str",
        "cli": "oxlint --deny no-multi-str",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-multi-str.html",
            "description": "Disallow multiline strings."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-nested-ternary",
        "cli": "oxlint --deny no-nested-ternary",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-nested-ternary.html",
            "description": "Disallows nested ternary expressions to improve code readability and maintainability."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-new-func",
        "cli": "oxlint --deny no-new-func",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-new-func.html",
            "description": "The rule disallow new operators with the Function object."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-return-assign",
        "cli": "oxlint --deny no-return-assign",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-return-assign.html",
            "description": "Disallows assignment operators in return statements"
        },
        "fixable": "üöß"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-script-url",
        "cli": "oxlint --deny no-script-url",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-script-url.html",
            "description": "Disallow javascript: urls"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-ternary",
        "cli": "oxlint --deny no-ternary",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-ternary.html",
            "description": "Disallow ternary operators"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "operator-assignment",
        "cli": "oxlint --deny operator-assignment",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/operator-assignment.html",
            "description": "This rule requires or disallows assignment operator shorthand where possible. It encourages the use of shorthand assignment operators like +=, -=, *=, /=, etc. to make the code more concise and readable."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-template-curly-in-string",
        "cli": "oxlint --deny no-template-curly-in-string",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-template-curly-in-string.html",
            "description": "Disallow template literal placeholder syntax in regular strings. This rule ensures that expressions like ${variable} are only used within template literals, avoiding incorrect usage in regular strings."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "prefer-exponentiation-operator",
        "cli": "oxlint --deny prefer-exponentiation-operator",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-exponentiation-operator.html",
            "description": "Disallow the use of Math.pow in favor of the ** operator"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-continue",
        "cli": "oxlint --deny no-continue",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-continue.html",
            "description": "Disallow continue statements"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "prefer-numeric-literals",
        "cli": "oxlint --deny prefer-numeric-literals",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-numeric-literals.html",
            "description": "Disallow parseInt() and Number.parseInt() in favor of binary, octal, and hexadecimal literals."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "prefer-object-spread",
        "cli": "oxlint --deny prefer-object-spread",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-object-spread.html",
            "description": "Disallow using Object.assign with an object literal as the first argument and prefer the use of object spread instead"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "prefer-object-has-own",
        "cli": "oxlint --deny prefer-object-has-own",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-object-has-own.html",
            "description": "Disallow use of Object.prototype.hasOwnProperty.call() and prefer use of Object.hasOwn()"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "prefer-promise-reject-errors",
        "cli": "oxlint --deny prefer-promise-reject-errors",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-promise-reject-errors.html",
            "description": "Require using Error objects as Promise rejection reasons"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "prefer-spread",
        "cli": "oxlint --deny prefer-spread",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-spread.html",
            "description": "Require spread operators instead of .apply()"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "prefer-rest-params",
        "cli": "oxlint --deny prefer-rest-params",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/prefer-rest-params.html",
            "description": "Disallows the use of the arguments object and instead enforces the use of rest parameters."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "sort-imports",
        "cli": "oxlint --deny sort-imports",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-imports.html",
            "description": "This rule checks all import declarations and verifies that all imports are first sorted by the used member syntax and then alphabetically by the first member or alias name."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "vars-on-top",
        "cli": "oxlint --deny vars-on-top",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/vars-on-top.html",
            "description": "Enforces that all var declarations are placed at the top of their containing scope."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "sort-keys",
        "cli": "oxlint --deny sort-keys",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/sort-keys.html",
            "description": "When declaring multiple properties, sorting property names alphabetically makes it easier to find and/or diff necessary properties at a later time."
        },
        "fixable": "üöß"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/consistent-type-specifier-style",
        "cli": "oxlint --deny import/consistent-type-specifier-style --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/consistent-type-specifier-style.html",
            "description": "This rule either enforces or bans the use of inline type-only markers for named imports."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/first",
        "cli": "oxlint --deny import/first --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/first.html",
            "description": "Forbids any non-import statements before imports except directives."
        },
        "fixable": "üöß"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/exports-last",
        "cli": "oxlint --deny import/exports-last --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/exports-last.html",
            "description": "This rule enforces that all exports are declared at the bottom of the file. This rule will report any export declarations that comes before any non-export statements."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-duplicates",
        "cli": "oxlint --deny import/no-duplicates --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-duplicates.html",
            "description": "Reports if a resolved path is imported more than once in the same module. This helps avoid unnecessary duplicate imports and keeps the code clean."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-anonymous-default-export",
        "cli": "oxlint --deny import/no-anonymous-default-export --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-anonymous-default-export.html",
            "description": "Reports if a module's default export is unnamed. This includes several types of unnamed data types; literals, object expressions, arrays, anonymous functions, arrow functions, and anonymous class declarations."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-named-default",
        "cli": "oxlint --deny import/no-named-default --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-named-default.html",
            "description": "Reports use of a default export as a locally named import."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-mutable-exports",
        "cli": "oxlint --deny import/no-mutable-exports --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-mutable-exports.html",
            "description": "Forbids the use of mutable exports with var or let."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "yoda",
        "cli": "oxlint --deny yoda",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/yoda.html",
            "description": "Require or disallow \"Yoda\" conditions. This rule aims to enforce consistent style of conditions which compare a variable to a literal value."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/group-exports",
        "cli": "oxlint --deny import/group-exports --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/group-exports.html",
            "description": "Reports when named exports are not grouped together in a single export declaration or when multiple assignments to CommonJS module.exports or exports object are present in a single file."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/no-namespace",
        "cli": "oxlint --deny import/no-namespace --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/no-namespace.html",
            "description": "Enforce a convention of not using namespaced (a.k.a. \"wildcard\" *) imports."
        },
        "fixable": "üöß"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/consistent-test-it",
        "cli": "oxlint --deny jest/consistent-test-it --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/consistent-test-it.html",
            "description": "Jest allows you to choose how you want to define your tests, using the it or the test keywords, with multiple permutations for each:"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/max-expects",
        "cli": "oxlint --deny jest/max-expects --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/max-expects.html",
            "description": "As more assertions are made, there is a possible tendency for the test to be more likely to mix multiple objectives. To avoid this, this rule reports when the maximum number of assertions is exceeded."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/max-nested-describe",
        "cli": "oxlint --deny jest/max-nested-describe --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/max-nested-describe.html",
            "description": "This rule enforces a maximum depth to nested describe() calls."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-alias-methods",
        "cli": "oxlint --deny jest/no-alias-methods --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-alias-methods.html",
            "description": "This rule ensures that only the canonical name as used in the Jest documentation is used in the code."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-deprecated-functions",
        "cli": "oxlint --deny jest/no-deprecated-functions --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-deprecated-functions.html",
            "description": "Over the years Jest has accrued some debt in the form of functions that have either been renamed for clarity, or replaced with more powerful APIs."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-confusing-set-timeout",
        "cli": "oxlint --deny jest/no-confusing-set-timeout --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-confusing-set-timeout.html",
            "description": "Disallow confusing usages of jest.setTimeout"
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-done-callback",
        "cli": "oxlint --deny jest/no-done-callback --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-done-callback.html",
            "description": "This rule checks the function parameter of hooks & tests for use of the done argument, suggesting you return a promise instead."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-hooks",
        "cli": "oxlint --deny jest/no-hooks --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-hooks.html",
            "description": "Disallows Jest setup and teardown hooks, such as beforeAll."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/prefer-default-export",
        "cli": "oxlint --deny import/prefer-default-export --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/prefer-default-export.html",
            "description": "In exporting files, this rule checks if there is default export or not."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-duplicate-hooks",
        "cli": "oxlint --deny jest/no-duplicate-hooks --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-duplicate-hooks.html",
            "description": "Disallows duplicate hooks in describe blocks."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-interpolation-in-snapshots",
        "cli": "oxlint --deny jest/no-interpolation-in-snapshots --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-interpolation-in-snapshots.html",
            "description": "Prevents the use of string interpolations in snapshots."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-jasmine-globals",
        "cli": "oxlint --deny jest/no-jasmine-globals --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-jasmine-globals.html",
            "description": "This rule reports on any usage of Jasmine globals, which is not ported to Jest, and suggests alternatives from Jest's own API."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-large-snapshots",
        "cli": "oxlint --deny jest/no-large-snapshots --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-large-snapshots.html",
            "description": "Disallow large snapshots."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-mocks-import",
        "cli": "oxlint --deny jest/no-mocks-import --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-mocks-import.html",
            "description": "This rule reports imports from a path containing a mocks component."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "default-param-last",
        "cli": "oxlint --deny default-param-last",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/default-param-last.html",
            "description": "Enforce default parameters to be last"
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-restricted-jest-methods",
        "cli": "oxlint --deny jest/no-restricted-jest-methods --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-restricted-jest-methods.html",
            "description": "Restrict the use of specific jest and vi methods."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-restricted-matchers",
        "cli": "oxlint --deny jest/no-restricted-matchers --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-restricted-matchers.html",
            "description": "Ban specific matchers & modifiers from being used, and can suggest alternatives."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-test-prefixes",
        "cli": "oxlint --deny jest/no-test-prefixes --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-test-prefixes.html",
            "description": "Require using .only and .skip over f and x."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-test-return-statement",
        "cli": "oxlint --deny jest/no-test-return-statement --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-test-return-statement.html",
            "description": "Disallow explicitly returning from tests."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "guard-for-in",
        "cli": "oxlint --deny guard-for-in",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/guard-for-in.html",
            "description": "Require for-in loops to include an if statement."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-untyped-mock-factory",
        "cli": "oxlint --deny jest/no-untyped-mock-factory --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-untyped-mock-factory.html",
            "description": "This rule triggers a warning if mock() or doMock() is used without a generic type parameter or return type."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-equality-matcher",
        "cli": "oxlint --deny jest/prefer-equality-matcher --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-equality-matcher.html",
            "description": "Jest has built-in matchers for expecting equality, which allow for more readable tests and error messages if an expectation fails."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-hooks-in-order",
        "cli": "oxlint --deny jest/prefer-hooks-in-order --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-hooks-in-order.html",
            "description": "Ensures that hooks are in the order that they are called in."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-each",
        "cli": "oxlint --deny jest/prefer-each --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-each.html",
            "description": "This rule enforces using each rather than manual loops."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-jest-mocked",
        "cli": "oxlint --deny jest/prefer-jest-mocked --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-jest-mocked.html",
            "description": "When working with mocks of functions using Jest, it's recommended to use the jest.mocked() helper function to properly type the mocked functions. This rule enforces the use of jest.mocked() for better type safety and readability."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-hooks-on-top",
        "cli": "oxlint --deny jest/prefer-hooks-on-top --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-hooks-on-top.html",
            "description": "While hooks can be setup anywhere in a test file, they are always called in a specific order, which means it can be confusing if they're intermixed with test cases."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-lowercase-title",
        "cli": "oxlint --deny jest/prefer-lowercase-title --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-lowercase-title.html",
            "description": "Enforce it, test, describe, and bench to have descriptions that begin with a lowercase letter. This provides more readable test failures. This rule is not enabled by default."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/no-identical-title",
        "cli": "oxlint --deny jest/no-identical-title --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/no-identical-title.html",
            "description": "This rule looks at the title of every test and test suite. It will report when two test suites or two test cases at the same level of a test suite have the same title."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-called-with",
        "cli": "oxlint --deny jest/prefer-called-with --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-called-with.html",
            "description": "Suggest using toBeCalledWith() or toHaveBeenCalledWith()"
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-mock-promise-shorthand",
        "cli": "oxlint --deny jest/prefer-mock-promise-shorthand --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-mock-promise-shorthand.html",
            "description": "When working with mocks of functions that return promises, Jest provides some API sugar functions to reduce the amount of boilerplate you have to write. These methods should be preferred when possible."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-comparison-matcher",
        "cli": "oxlint --deny jest/prefer-comparison-matcher --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-comparison-matcher.html",
            "description": "This rule checks for comparisons in tests that could be replaced with one of the following built-in comparison matchers:"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-spy-on",
        "cli": "oxlint --deny jest/prefer-spy-on --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-spy-on.html",
            "description": "When mocking a function by overwriting a property you have to manually restore the original implementation when cleaning up. When using jest.spyOn() Jest keeps track of changes, and they can be restored with jest.restoreAllMocks(), mockFn.mockRestore() or by setting restoreMocks to true in the Jest config."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-to-be",
        "cli": "oxlint --deny jest/prefer-to-be --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-to-be.html",
            "description": "When asserting against primitive literals such as numbers and strings, the equality matchers all operate the same, but read slightly differently in code."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-strict-equal",
        "cli": "oxlint --deny jest/prefer-strict-equal --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-strict-equal.html",
            "description": "This rule triggers a warning if toEqual() is used to assert equality."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-to-contain",
        "cli": "oxlint --deny jest/prefer-to-contain --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-to-contain.html",
            "description": "In order to have a better failure message, toContain() should be used upon asserting expectations on an array containing an object."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-todo",
        "cli": "oxlint --deny jest/prefer-todo --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-todo.html",
            "description": "When test cases are empty then it is better to mark them as test.todo as it will be highlighted in the summary output."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-to-have-length",
        "cli": "oxlint --deny jest/prefer-to-have-length --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-to-have-length.html",
            "description": "In order to have a better failure message, toHaveLength() should be used upon asserting expectations on objects length property."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/require-hook",
        "cli": "oxlint --deny jest/require-hook --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/require-hook.html",
            "description": "This rule flags any expression that is either at the toplevel of a test file or directly within the body of a describe, except for the following:"
        },
        "fixable": ""
    },
    {
        "source": "node",
        "plugin": "node",
        "name": "node/no-exports-assign",
        "cli": "oxlint --deny node/no-exports-assign --node-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/node/no-exports-assign.html",
            "description": "Disallows assignment to exports."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/avoid-new",
        "cli": "oxlint --deny promise/avoid-new --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/avoid-new.html",
            "description": "Disallow creating promises with new Promise()."
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/no-nesting",
        "cli": "oxlint --deny promise/no-nesting --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-nesting.html",
            "description": "Disallow nested then() or catch() statements."
        },
        "fixable": "üöß"
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/no-return-wrap",
        "cli": "oxlint --deny promise/no-return-wrap --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-return-wrap.html",
            "description": "Prevents unnecessary wrapping of return values in promises with either Promise.resolve or Promise.reject."
        },
        "fixable": "üöß"
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/prefer-await-to-callbacks",
        "cli": "oxlint --deny promise/prefer-await-to-callbacks --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-await-to-callbacks.html",
            "description": "The rule encourages the use of async/await for handling asynchronous code instead of traditional callback functions. async/await, introduced in ES2017, provides a clearer and more concise syntax for writing asynchronous code, making it easier to read and maintain."
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/prefer-await-to-then",
        "cli": "oxlint --deny promise/prefer-await-to-then --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-await-to-then.html",
            "description": "Prefer await to then()/catch()/finally() for reading Promise values"
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/param-names",
        "cli": "oxlint --deny promise/param-names --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/param-names.html",
            "description": "Enforce standard parameter names for Promise constructors."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-boolean-value",
        "cli": "oxlint --deny react/jsx-boolean-value --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-boolean-value.html",
            "description": "Enforce a consistent boolean attribute style in your code."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/prefer-catch",
        "cli": "oxlint --deny promise/prefer-catch --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/prefer-catch.html",
            "description": "Prefer catch to then(a, b) and then(null, b). This rule disallows the passing of an argument into the second parameter of then calls for handling promise errors."
        },
        "fixable": "üöß"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/no-set-state",
        "cli": "oxlint --deny react/no-set-state --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/no-set-state.html",
            "description": "Disallow the usage of this.setState in React components."
        },
        "fixable": ""
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/prefer-expect-resolves",
        "cli": "oxlint --deny jest/prefer-expect-resolves --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/prefer-expect-resolves.html",
            "description": "When working with promises, there are two primary ways you can test the resolved value:"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "jest",
        "plugin": "jest",
        "name": "jest/require-top-level-describe",
        "cli": "oxlint --deny jest/require-top-level-describe --jest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/jest/require-top-level-describe.html",
            "description": "This rule triggers a warning if a test case (test and it) or a hook (beforeAll, beforeEach, afterEach, afterAll) is not located in a top-level describe block."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/prefer-es6-class",
        "cli": "oxlint --deny react/prefer-es6-class --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/prefer-es6-class.html",
            "description": "React offers you two ways to create traditional components: using the ES5 create-react-class module or the new ES6 class system."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/jsx-curly-brace-presence",
        "cli": "oxlint --deny react/jsx-curly-brace-presence --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/jsx-curly-brace-presence.html",
            "description": ""
        },
        "fixable": "üöß"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/adjacent-overload-signatures",
        "cli": "oxlint --deny typescript/adjacent-overload-signatures",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/adjacent-overload-signatures.html",
            "description": "Require that function overload signatures be consecutive."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/array-type",
        "cli": "oxlint --deny typescript/array-type",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/array-type.html",
            "description": "Require consistently using either T[] or Array<T> for arrays."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/ban-tslint-comment",
        "cli": "oxlint --deny typescript/ban-tslint-comment",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/ban-tslint-comment.html",
            "description": "This rule disallows tslint:<rule-flag> comments"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/consistent-generic-constructors",
        "cli": "oxlint --deny typescript/consistent-generic-constructors",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-generic-constructors.html",
            "description": "When constructing a generic class, you can specify the type arguments on either the left-hand side (as a type annotation) or the right-hand side (as part of the constructor call)."
        },
        "fixable": "üöß"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/consistent-indexed-object-style",
        "cli": "oxlint --deny typescript/consistent-indexed-object-style",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-indexed-object-style.html",
            "description": "Choose between requiring either Record type or indexed signature types."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/consistent-type-imports",
        "cli": "oxlint --deny typescript/consistent-type-imports",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-type-imports.html",
            "description": "Enforce consistent usage of type imports."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-empty-interface",
        "cli": "oxlint --deny typescript/no-empty-interface",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-empty-interface.html",
            "description": "Disallow the declaration of empty interfaces."
        },
        "fixable": ""
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/no-inferrable-types",
        "cli": "oxlint --deny typescript/no-inferrable-types",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/no-inferrable-types.html",
            "description": "Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean"
        },
        "fixable": "üöß"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/prefer-for-of",
        "cli": "oxlint --deny typescript/prefer-for-of",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-for-of.html",
            "description": "Enforces the use of for-of loop instead of a for loop with a simple iteration."
        },
        "fixable": "üöß"
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/self-closing-comp",
        "cli": "oxlint --deny react/self-closing-comp --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/self-closing-comp.html",
            "description": "Detects components without children which can be self-closed to avoid unnecessary extra closing tags."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/prefer-namespace-keyword",
        "cli": "oxlint --deny typescript/prefer-namespace-keyword",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-namespace-keyword.html",
            "description": "This rule reports when the module keyword is used instead of namespace. This rule does not report on the use of TypeScript module declarations to describe external APIs (declare module 'foo' {})."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/prefer-function-type",
        "cli": "oxlint --deny typescript/prefer-function-type",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/prefer-function-type.html",
            "description": "Enforce using function types instead of interfaces with call signatures. TypeScript allows for two common ways to declare a type for a function:"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/empty-brace-spaces",
        "cli": "oxlint --deny unicorn/empty-brace-spaces",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/empty-brace-spaces.html",
            "description": "Removes the extra spaces or new line characters inside a pair of braces that does not contain additional code. This ensures that braces are clean and do not contain unnecessary spaces or newlines."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/consistent-existence-index-check",
        "cli": "oxlint --deny unicorn/consistent-existence-index-check",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-existence-index-check.html",
            "description": "Enforce consistent style for element existence checks with indexOf(), lastIndexOf(), findIndex(), and findLastIndex(). This ensures that comparisons are performed in a standard and clear way."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "typescript",
        "plugin": "",
        "name": "typescript/consistent-type-definitions",
        "cli": "oxlint --deny typescript/consistent-type-definitions",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/typescript/consistent-type-definitions.html",
            "description": "Enforce type definitions to consistently use either interface or type."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/consistent-date-clone",
        "cli": "oxlint --deny unicorn/consistent-date-clone",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/consistent-date-clone.html",
            "description": "The Date constructor can clone a Date object directly when passed as an argument, making timestamp conversion unnecessary. This rule enforces the use of the direct Date cloning instead of using .getTime() for conversion."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/error-message",
        "cli": "oxlint --deny unicorn/error-message",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/error-message.html",
            "description": "Enforces providing a message when creating built-in Error objects to improve readability and debugging."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-array-method-this-argument",
        "cli": "oxlint --deny unicorn/no-array-method-this-argument",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-array-method-this-argument.html",
            "description": "Disallows the use of the thisArg parameter in array iteration methods such as map, filter, some, every, and similar."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-await-expression-member",
        "cli": "oxlint --deny unicorn/no-await-expression-member",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-await-expression-member.html",
            "description": "Disallows member access from await expressions."
        },
        "fixable": "‚ö†Ô∏èüõ†Ô∏èÔ∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-unreadable-array-destructuring",
        "cli": "oxlint --deny unicorn/no-unreadable-array-destructuring",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-unreadable-array-destructuring.html",
            "description": "Disallow unreadable array destructuring"
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-null",
        "cli": "oxlint --deny unicorn/no-null",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-null.html",
            "description": "Disallow the use of the null literal, to encourage using undefined instead."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-console-spaces",
        "cli": "oxlint --deny unicorn/no-console-spaces",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-console-spaces.html",
            "description": "Disallows leading/trailing space inside console.log() and similar methods."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-zero-fractions",
        "cli": "oxlint --deny unicorn/no-zero-fractions",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-zero-fractions.html",
            "description": "Prevents the use of zero fractions."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/numeric-separators-style",
        "cli": "oxlint --deny unicorn/numeric-separators-style",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/numeric-separators-style.html",
            "description": "Enforces a convention of grouping digits using numeric separators."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/number-literal-case",
        "cli": "oxlint --deny unicorn/number-literal-case",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/number-literal-case.html",
            "description": "This rule enforces proper case for numeric literals."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-array-index-of",
        "cli": "oxlint --deny unicorn/prefer-array-index-of",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-array-index-of.html",
            "description": "Enforces using indexOf or lastIndexOf instead of findIndex or findLastIndex when the callback is a simple strict equality comparison."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-global-this",
        "cli": "oxlint --deny unicorn/prefer-global-this",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-global-this.html",
            "description": "Enforces the use of globalThis instead of environment‚Äëspecific global object aliases (window, self, or global). Using the standard globalThis makes your code portable across browsers, Web‚ÄØWorkers, Node.js, and future JavaScript runtimes."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-dom-node-text-content",
        "cli": "oxlint --deny unicorn/prefer-dom-node-text-content",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-dom-node-text-content.html",
            "description": "Enforces the use of .textContent over .innerText for DOM nodes."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-includes",
        "cli": "oxlint --deny unicorn/prefer-includes",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-includes.html",
            "description": "Prefer includes() over indexOf() when checking for existence or non-existence. All built-ins have .includes() in addition to .indexOf()."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-logical-operator-over-ternary",
        "cli": "oxlint --deny unicorn/prefer-logical-operator-over-ternary",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-logical-operator-over-ternary.html",
            "description": "This rule finds ternary expressions that can be simplified to a logical operator."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-modern-dom-apis",
        "cli": "oxlint --deny unicorn/prefer-modern-dom-apis",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-modern-dom-apis.html",
            "description": "Enforces the use of:"
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-negative-index",
        "cli": "oxlint --deny unicorn/prefer-negative-index",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-negative-index.html",
            "description": "Prefer negative index over .length - index when possible"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/filename-case",
        "cli": "oxlint --deny unicorn/filename-case",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/filename-case.html",
            "description": "Enforces a consistent case style for filenames to improve project organization and maintainability. By default, kebab-case is enforced, but other styles can be configured."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/catch-error-name",
        "cli": "oxlint --deny unicorn/catch-error-name",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/catch-error-name.html",
            "description": "This rule enforces consistent and descriptive naming for error variables in catch statements, preventing the use of vague names like badName or _ when the error is used."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-optional-catch-binding",
        "cli": "oxlint --deny unicorn/prefer-optional-catch-binding",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-optional-catch-binding.html",
            "description": "Prefers omitting the catch binding parameter if it is unused"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-spread",
        "cli": "oxlint --deny unicorn/prefer-spread",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-spread.html",
            "description": "Enforces the use of the spread operator (...) over outdated patterns."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-reflect-apply",
        "cli": "oxlint --deny unicorn/prefer-reflect-apply",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-reflect-apply.html",
            "description": "Reflect.apply() is arguably less verbose and easier to understand. In addition, when you accept arbitrary methods, it's not safe to assume .apply() exists or is not overridden."
        },
        "fixable": ""
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-string-trim-start-end",
        "cli": "oxlint --deny unicorn/prefer-string-trim-start-end",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-trim-start-end.html",
            "description": "String#trimLeft() and String#trimRight() are aliases of String#trimStart() and String#trimEnd(). This is to ensure consistency and use direction-independent wording."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-structured-clone",
        "cli": "oxlint --deny unicorn/prefer-structured-clone",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-structured-clone.html",
            "description": "Prefer using structuredClone to create a deep clone."
        },
        "fixable": "üí°"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/require-array-join-separator",
        "cli": "oxlint --deny unicorn/require-array-join-separator",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/require-array-join-separator.html",
            "description": "Enforce using the separator argument with Array#join()"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/switch-case-braces",
        "cli": "oxlint --deny unicorn/switch-case-braces",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/switch-case-braces.html",
            "description": "Requires empty switch cases to omit braces, while non-empty cases must use braces. This reduces visual clutter for empty cases and enforces proper scoping for non-empty ones."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/text-encoding-identifier-case",
        "cli": "oxlint --deny unicorn/text-encoding-identifier-case",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/text-encoding-identifier-case.html",
            "description": "This rule enforces consistent casing for text encoding identifiers, specifically:"
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/throw-new-error",
        "cli": "oxlint --deny unicorn/throw-new-error",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/throw-new-error.html",
            "description": "This rule makes sure you always use new when throwing an error."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "vitest",
        "plugin": "vitest",
        "name": "vitest/no-import-node-test",
        "cli": "oxlint --deny vitest/no-import-node-test --vitest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/vitest/no-import-node-test.html",
            "description": "This rule warns when node:test is imported (usually accidentally). With --fix, it will replace the import with vitest."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "vitest",
        "plugin": "vitest",
        "name": "vitest/prefer-to-be-falsy",
        "cli": "oxlint --deny vitest/prefer-to-be-falsy --vitest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/vitest/prefer-to-be-falsy.html",
            "description": "This rule warns when toBe(false) is used with expect or expectTypeOf. With --fix, it will be replaced with toBeFalsy()."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "vitest",
        "plugin": "vitest",
        "name": "vitest/prefer-to-be-object",
        "cli": "oxlint --deny vitest/prefer-to-be-object --vitest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/vitest/prefer-to-be-object.html",
            "description": "This rule enforces using toBeObject() to check if a value is of type Object."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "vitest",
        "plugin": "vitest",
        "name": "vitest/prefer-to-be-truthy",
        "cli": "oxlint --deny vitest/prefer-to-be-truthy --vitest-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/vitest/prefer-to-be-truthy.html",
            "description": "This rule warns when toBe(true) is used with expect or expectTypeOf. With --fix, it will be replaced with toBeTruthy()."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/no-nested-ternary",
        "cli": "oxlint --deny unicorn/no-nested-ternary",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/no-nested-ternary.html",
            "description": "This rule disallows deeply nested ternary expressions. Nested ternary expressions that are only one level deep and wrapped in parentheses are allowed."
        },
        "fixable": "üõ†Ô∏è"
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-unreachable",
        "cli": "oxlint --deny no-unreachable",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-unreachable.html",
            "description": "Disallow unreachable code after return, throw, continue, and break statements"
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "getter-return",
        "cli": "oxlint --deny getter-return",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/getter-return.html",
            "description": "Requires all getters to have a return statement."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/export",
        "cli": "oxlint --deny import/export --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/export.html",
            "description": "Reports funny business with exports, like repeated exports of names or defaults."
        },
        "fixable": ""
    },
    {
        "source": "import",
        "plugin": "import",
        "name": "import/named",
        "cli": "oxlint --deny import/named --import-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/import/named.html",
            "description": "Verifies that all named imports are part of the set of named exports in the referenced module."
        },
        "fixable": ""
    },
    {
        "source": "eslint",
        "plugin": "",
        "name": "no-undef",
        "cli": "oxlint --deny no-undef",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/eslint/no-undef.html",
            "description": "Disallow the use of undeclared variables."
        },
        "fixable": ""
    },
    {
        "source": "promise",
        "plugin": "promise",
        "name": "promise/no-return-in-finally",
        "cli": "oxlint --deny promise/no-return-in-finally --promise-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/promise/no-return-in-finally.html",
            "description": "Disallow return statements in a finally() callback of a promise."
        },
        "fixable": ""
    },
    {
        "source": "react",
        "plugin": "react",
        "name": "react/require-render-return",
        "cli": "oxlint --deny react/require-render-return --react-plugin",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/react/require-render-return.html",
            "description": "Enforce ES5 or ES6 class for returning value in render function"
        },
        "fixable": ""
    },
    {
        "source": "oxc",
        "plugin": "",
        "name": "oxc/no-map-spread",
        "cli": "oxlint --deny oxc/no-map-spread",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/oxc/no-map-spread.html",
            "description": "Disallow the use of object or array spreads in Array.prototype.map and Array.prototype.flatMap to add properties/elements to array items."
        },
        "fixable": "üõ†Ô∏èüí°"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-object-from-entries",
        "cli": "oxlint --deny unicorn/prefer-object-from-entries",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-object-from-entries.html",
            "description": "Encourages using Object.fromEntries when converting an array of key-value pairs into an object."
        },
        "fixable": "üöß"
    },
    {
        "source": "unicorn",
        "plugin": "",
        "name": "unicorn/prefer-string-raw",
        "cli": "oxlint --deny unicorn/prefer-string-raw",
        "default": false,
        "docs": {
            "url": "https://oxc.rs/docs/guide/usage/linter/rules/unicorn/prefer-string-raw.html",
            "description": "Prefers use of String.raw to avoid escaping ."
        },
        "fixable": "üõ†Ô∏è"
    }
]